<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="CZMCCSpace" xmlns="http://ibatis.apache.org/mapping"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <alias>
    <typeAlias alias="CZWorkflowInterface" type="Botwave.XQP.Domain.CZWorkflowInterface, Botwave.XQP" />
    <typeAlias alias="CZWorkflowRelation" type="Botwave.XQP.Domain.CZWorkflowRelation, Botwave.XQP" />
    <typeAlias alias="CZWorkflowAttention" type="Botwave.XQP.Domain.CZWorkflowAttention, Botwave.XQP" />
    <typeAlias alias="CZWorkflowRelationSetting" type="Botwave.XQP.Domain.CZWorkflowRelationSetting, Botwave.XQP" />
  </alias>

  <statements>
    <!-- DynamicForm -->
    <select id="bwdf_FormDefinitions_Select_By_Name" resultMap="FormDefinitionSpace.FormDefinitionResult" parameterClass="string">
      SELECT f.Id, f.Creator, u.RealName as LastModifier, f.CreatedTime, f.LastModTime,Name,Version,IsCurrentVersion,Enabled,Comment,TemplateContent
      FROM bwdf_FormDefinitions f
      left join bw_Users u on u.UserName=f.LastModifier
      where [Name] = #Name# and Enabled = 1
      ORDER BY f.Version DESC
    </select>
    
    <!-- CZWorkflowInterface -->
    <insert id="cz_WorkflowInterfaces_Insert" parameterClass="CZWorkflowInterface">
      insert into cz_WorkflowInterfaces([Name], Url, Description, SortOrder, [Status], Creator, CreatedTime, LastModifier, LastModTime)
      values(#Name#, #Url#, #Description#, #SortOrder#, #Status#, #Creator#, getdate(), #LastModifier#, getdate())
    </insert>

    <update id="cz_WorkflowInterfaces_Update" parameterClass="CZWorkflowInterface">
      UPDATE cz_WorkflowInterfaces
      SET [Name]=#Name#, Url=#Url#, Description=#Description#, SortOrder=#SortOrder#, [Status]=#Status#, LastModifier=#LastModifier#, LastModTime=getdate()
      WHERE [Id] = #Id#
    </update>
    
    <delete id="cz_WorkflowInterfaces_Delete" parameterClass="int">
      delete from cz_WorkflowInterfaces where [Id] = #value#
    </delete>
    
    <select id="cz_WorkflowInterfaces_Select" parameterClass="int" resultClass="CZWorkflowInterface" >
      select
      [Id], [Name], [Url], Description, w.SortOrder, w.[Status], w.Creator, w.CreatedTime, u.RealName as LastModifier, w.LastModTime
      from cz_WorkflowInterfaces w
       left join bw_Users u on w.LastModifier = u.UserName
      <dynamic prepend="where">
        <isParameterPresent>[Id] = #value#</isParameterPresent>
      </dynamic>
      ORDER BY w.SortOrder
    </select>

    <select id="cz_WorkflowInterfaces_Display" parameterClass="int" resultClass="CZWorkflowInterface" >
      select
      [Id], [Name], [Url], Description, SortOrder, [Status], Creator, CreatedTime, LastModifier, LastModTime
      from cz_WorkflowInterfaces
      where [Status]=1
      ORDER BY SortOrder
    </select>
    
    <select id="cz_WorkflowInterfaces_Count" parameterClass="int" resultClass="int" >
      select count(0) from cz_WorkflowInterfaces
    </select>

    <!-- CZWorkflowRelation -->
    <insert id="cz_WorkflowRelations_Insert" parameterClass="CZWorkflowRelation">
      insert into cz_WorkflowRelations(WorkflowInstanceId, RelationWorkflowInstanceId, IsRefAttachment, [Status], Creator, CreatedTime, LastModifier, LastModTime)
      values(#WorkflowInstanceId#, #RelationWorkflowInstanceId#, #IsRefAttachment#, #Status#, #Creator#, getdate(), #LastModifier#, getdate())
    </insert>
    
    <update id="cz_WorkflowRelations_Update_RefAttachment" parameterClass="CZWorkflowRelation">
      UPDATE cz_WorkflowRelations
      SET [IsRefAttachment]=#IsRefAttachment#, LastModifier=#LastModifier#, LastModTime=getdate()
      WHERE [Id] = #Id#
    </update>

    <update id="cz_WorkflowRelations_Update_Status" parameterClass="CZWorkflowRelation">
      UPDATE cz_WorkflowRelations
      SET [Status]=#Status#, LastModifier=#LastModifier#, LastModTime=getdate()
      WHERE [Id] = #Id#
    </update>

    <update id="cz_WorkflowRelations_Update_WorkflowInstanceId" parameterClass="Hashtable">
      UPDATE cz_WorkflowRelations
      SET [WorkflowInstanceId]=#NewWorkflowInstanceId#, LastModTime=getdate()
      WHERE [WorkflowInstanceId] = #OldWorkflowInstanceId# and Creator=#Creator#
    </update>
    
    <delete id="CZWorkflowRelation_Delete" parameterClass="int">
      delete from cz_WorkflowRelations where [Id] = #value#
    </delete>

    <select id="CZWorkflowRelation_Select" parameterClass="int" resultClass="CZWorkflowRelation" >
      select
      Id, WorkflowInstanceId, RelationWorkflowInstanceId, IsRefAttachment, [Status], Creator, CreatedTime, LastModifier, LastModTime
      from cz_WorkflowRelations 
      <dynamic prepend="where">
        <isParameterPresent>Id = #value#</isParameterPresent>
      </dynamic>
      order by CreatedTime
    </select>

    <!-- CZWorkflowRelationSetting -->
    <insert id="cz_WorkflowRelationSetting_Insert" parameterClass="CZWorkflowRelationSetting">
      insert into cz_WorkflowRelations_Setting(WorkflowId, ActivityId, RelationWorkflowName, [SettingType], [TriggerType], [OperateType], [IsRefAttachment], [Status], [FieldsAssemble], [RelationCreator], [CREATOR], [LastModifier])
      values(#WorkflowId#, #ActivityId#, #RelationWorkflowName#, #SettingType#, #TriggerType#, #OperateType#, #IsRefAttachment#, #Status#, #FieldsAssemble#, #RelationCreator#, #Creator#, #LastModifier#)
    </insert>

    <update id="cz_WorkflowRelationSetting_Update" parameterClass="CZWorkflowRelationSetting">
      UPDATE [dbo].[cz_WorkflowRelations_Setting]
      SET [RelationWorkflowName] = #RelationWorkflowName#
      ,[SettingType] = #SettingType#
      ,[TriggerType] = #TriggerType#
      ,[OperateType] = #OperateType#
      ,[IsRefAttachment] = #IsRefAttachment#
      ,[Status] = #Status#
      ,[FieldsAssemble] = #FieldsAssemble#
      ,[RelationCreator] = #RelationCreator#
      ,[LastModifier] = #LastModifier#
      ,[LastModTime] = #LastModTime#
      WHERE Id=#Id#
    </update>

    <insert id="cz_WorkflowInstanceRelation_Insert" parameterClass="Hashtable">
      insert into cz_WorkflowRelations(WorkflowInstanceId, RelationWorkflowInstanceId, IsRefAttachment, [Status], Creator, CreatedTime, LastModifier, LastModTime,IsChildren)
      values(#WorkflowInstanceId#, #RelationWorkflowInstanceId#,0,1, #Creator#, getdate(), #Creator#, getdate(),1)
    </insert>
    
    <delete id="cz_WorkflowRelationSetting_Delete" parameterClass="int">
      update cz_WorkflowRelations_Setting set status=0 where [Id] = #value#
    </delete>

    <select id="cz_WorkflowRelationSetting_Select" parameterClass="guid" resultClass="CZWorkflowRelationSetting" >
      SELECT isnull([ID],0) Id
      ,bw.[WorkflowId]
      ,ba.[ActivityId]
      ,bw.WorkflowName
      ,ba.ActivityName
      ,ws.[RelationWorkflowName]
      ,ws.[SettingType]
      ,ws.[TriggerType]
      ,ws.[OperateType]
      ,ws.[IsRefAttachment]
      ,isnull(ws.[Status],0) Status
      ,ws.[FieldsAssemble]
      ,ws.[RelationCreator]
      ,ws.[CREATOR]
      ,ws.[CREATEDTIME]
      ,ws.[LastModifier]
      ,ws.[LastModTime]
      FROM bwwf_Activities ba
      inner join bwwf_workflows bw on ba.workflowid=bw.workflowid
      left join [dbo].[cz_WorkflowRelations_Setting] ws
      on ba.workflowid=ws.workflowid and ba.activityid=ws.activityid
      <dynamic prepend="where">
        <isParameterPresent>bw.WorkflowId = #value#</isParameterPresent>
      </dynamic>
      order by ba.sortorder
    </select>

    <select id="cz_WorkflowRelationSetting_Select_By_Id" parameterClass="int" resultClass="CZWorkflowRelationSetting" >
      SELECT isnull([ID],0) Id
      ,bw.[WorkflowId]
      ,ba.[ActivityId]
      ,bw.WorkflowName
      ,ba.ActivityName
      ,ws.[RelationWorkflowName]
      ,ws.[SettingType]
      ,ws.[TriggerType]
      ,ws.[OperateType]
      ,ws.[IsRefAttachment]
      ,isnull(ws.[Status],0) Status
      ,ws.[FieldsAssemble]
      ,ws.[RelationCreator]
      ,ws.[CREATOR]
      ,ws.[CREATEDTIME]
      ,ws.[LastModifier]
      ,ws.[LastModTime]
      FROM bwwf_Activities ba
      inner join bwwf_workflows bw on ba.workflowid=bw.workflowid
      left join [dbo].[cz_WorkflowRelations_Setting] ws
      on ba.workflowid=ws.workflowid and ba.activityid=ws.activityid
      <dynamic prepend="where">
        <isParameterPresent>Id = #value#</isParameterPresent>
      </dynamic>
    </select>

    <select id="cz_WorkflowRelationSetting_Select_By_Aid" parameterClass="guid" resultClass="CZWorkflowRelationSetting" >
      SELECT isnull([ID],0) Id
      ,bw.[WorkflowId]
      ,ba.[ActivityId]
      ,bw.WorkflowName
      ,ba.ActivityName
      ,ws.[RelationWorkflowName]
      ,ws.[SettingType]
      ,ws.[TriggerType]
      ,ws.[OperateType]
      ,ws.[IsRefAttachment]
      ,isnull(ws.[Status],0) Status
      ,ws.[FieldsAssemble]
      ,ws.[RelationCreator]
      ,ws.[CREATOR]
      ,ws.[CREATEDTIME]
      ,ws.[LastModifier]
      ,ws.[LastModTime]
      FROM bwwf_Activities ba
      inner join bwwf_workflows bw on ba.workflowid=bw.workflowid
      left join [dbo].[cz_WorkflowRelations_Setting] ws
      on ba.workflowid=ws.workflowid and ba.activityid=ws.activityid
      <dynamic prepend="where">
        <isParameterPresent>ws.[ActivityId] = #value#</isParameterPresent>
      </dynamic>
    </select>

    <select id="cz_RelationWorkflowInstance_Select" parameterClass="guid" resultClass="System.Data.DataSet" >
      select r.Id,r.WorkflowInstanceId, r.RelationWorkflowInstanceId, tw.SheetId, tw.Title, tw.State, u.RealName as Creator, tw.StartedTime, r.IsRefAttachment,
      (CASE State WHEN 99 THEN '取消'	ELSE dbo.fn_bwwf_GetCurrentActivityNames(tw.WorkflowInstanceId)END)
      CurrentActivityNames,
      (CASE tw.State WHEN 2 THEN '' WHEN 99 THEN '' ELSE dbo.fn_bwwf_GetCurrentActors(tw.WorkflowInstanceId) END) AS CurrentActors
      from cz_WorkflowRelations r
      inner join bwwf_Tracking_Workflows tw on tw.WorkflowInstanceId=r.RelationWorkflowInstanceId
      inner join bw_users u on u.UserName = tw.Creator
      where
          r.WorkflowInstanceId=#value# and
          r.IsChildren=1 and exists(select WorkflowInstanceId from bwwf_Tracking_Workflows tws
          inner join cz_WorkflowRelations_Setting ws on tws.workflowid=ws.workflowid and tws.WorkflowInstanceId=#value#
          and tws.WorkflowInstanceId=r.WorkflowInstanceId and ws.status=1)
      order by tw.sheetid
    </select>

    <select id="cz_RelationWorkflowInstanceState_Select" parameterClass="Hashtable" resultClass="System.Data.DataSet" >
      select r.Id,r.WorkflowInstanceId, tw.State
      from cz_WorkflowRelations r
      inner join bwwf_Tracking_Workflows tw on tw.WorkflowInstanceId=r.RelationWorkflowInstanceId
      where
      r.WorkflowInstanceId=#WorkflowInstanceId# and tw.state in (1,2) and
      r.IsChildren=1 and exists(select WorkflowInstanceId from bwwf_Tracking_Workflows tws
      inner join cz_WorkflowRelations_Setting ws on tws.workflowid=ws.workflowid and tws.WorkflowInstanceId=#WorkflowInstanceId#
      and tws.WorkflowInstanceId=r.WorkflowInstanceId and ws.status=1)
      order by tw.sheetid
    </select>

    <select id="cz_WorkflowRelationSettingTable_Select_By_Aid" parameterClass="guid" resultClass="System.Data.DataSet" >
      SELECT isnull([ID],0) Id
      ,bw.[WorkflowId]
      ,ba.[ActivityId]
      ,bw.WorkflowName
      ,ba.ActivityName
      ,ws.[RelationWorkflowName]
      ,ws.[SettingType]
      ,ws.[TriggerType]
      ,isnull(ws.[OperateType],0) OperateType
      ,ws.[IsRefAttachment]
      ,isnull(ws.[Status],0) Status
      ,ws.[FieldsAssemble]
      ,ws.[RelationCreator]
      ,ws.[CREATOR]
      ,ws.[CREATEDTIME]
      ,ws.[LastModifier]
      ,ws.[LastModTime]
      FROM bwwf_Activities ba
      inner join bwwf_workflows bw on ba.workflowid=bw.workflowid
      inner join [dbo].[cz_WorkflowRelations_Setting] ws
      on ba.workflowid=ws.workflowid and ba.activityid=ws.activityid
      <dynamic prepend="where">
        <isParameterPresent>ws.[ActivityId] = #value# and  ws.status=1</isParameterPresent>
      </dynamic>
    </select>
    
    <select id="cz_RelationWorkflowInstance_Select_Count" parameterClass="guid" resultClass="int" >
      select count(relationworkflowinstanceid)
      from cz_WorkflowRelations r
      inner join bwwf_Tracking_Workflows tw on tw.WorkflowInstanceId=r.WorkflowInstanceId
      inner join bwwf_workflows w on tw.workflowid=w.workflowid
      inner join cz_WorkflowRelations_Setting ws on w.workflowid=ws.workflowid
      where r.WorkflowInstanceId=#value# and r.IsChildren=1 and ws.status=1
    </select>
    <!-- CZWorkflowRelationSetting End-->
    
    <!-- CZWorkflowAttention -->
    <insert id="cz_WorkflowAttention_Insert" parameterClass="CZWorkflowAttention">
      insert into cz_WorkflowAttention(WorkflowInstanceId, Comment, [Type], [Status], Creator, CreatedTime, LastModifier, LastModTime)
      values(#WorkflowInstanceId#, #Comment#, #Type#, #Status#, #Creator#, getdate(), #LastModifier#, getdate())
    </insert>
    
    <update id="cz_WorkflowAttention_Update" parameterClass="CZWorkflowAttention">
      UPDATE cz_WorkflowAttention
      SET [Comment]=#Comment#, Status=#Status#, LastModifier=#LastModifier#, LastModTime=getdate()
      WHERE ([WorkflowInstanceId] = #WorkflowInstanceId# and Creator=#Creator#)
    </update>

    <update id="cz_WorkflowAttention_UpdateStatus" parameterClass="Hashtable">
      UPDATE cz_WorkflowAttention
      SET Status=#Status#, LastModifier=#Creator#, LastModTime=getdate()
      WHERE ([WorkflowInstanceId] = #WorkflowInstanceId# and Creator=#Creator#)
    </update>
    
    <select id="cz_WorkflowAttention_ExistsStatus" parameterClass="Hashtable" resultClass="int" >
      select [Status]
      from cz_WorkflowAttention
      WHERE ([WorkflowInstanceId] = #WorkflowInstanceId# and Creator=#Creator#)
    </select>
    
  </statements>
</sqlMap>