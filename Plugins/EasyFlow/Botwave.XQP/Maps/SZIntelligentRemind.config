<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="SZIntelligentRemindSpace" xmlns="http://ibatis.apache.org/mapping"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <alias>
    <typeAlias alias="SZIntelligentRemind" type="Botwave.XQP.Domain.SZIntelligentRemind, Botwave.XQP" />
    <!--<typeAlias alias="ReminderTimeSpan" type="Botwave.XQP.Domain.ReminderTimeSpan, Botwave.XQP" />-->
  </alias>

	<resultMaps>
    <resultMap class="SZIntelligentRemind" id="IntelligentRemind_Result">
      <result column="Id" property="Id" />
      <result column="WorkflowName" property="WorkflowName" />
      <result column="ActivityName" property="ActivityName" />
      <result column="ExtArgs" property="ExtArgs" />
      <result column="StayHours" property="StayHours" />
      <result column="ToHours" property="ToHours" />
      <result column="ToInterval" property="ToInterval" />
      <result column="ToTimes" property="ToTimes" />
      <result column="TimeoutInterval" property="TimeoutInterval" />
      <result column="RemindType" property="RemindType" />
      <result column="TimeoutTimes" property="TimeoutTimes" />
      <result column="StatisticsType" property="StatisticsType" />
      <result column="SettingType" property="SettingType" />
      <result column="Creator" property="Creator" />
      <result column="CreatedTime" property="CreatedTime" />
      <result column="AllocatorUsers" property="AllocatorUsers" />
      <result column="ExtendAllocators" property="ExtendAllocators" />
      <result column="ExtendAllocatorArgs" property="ExtendAllocatorArgs"/>
      <result column="ExcludedSteps" property="ExcludedSteps" />
      <result column="StartActivityName" property="StartActivityName" />
      <result column="EndActivityName" property="EndActivityName" />
      <result column="WarnningAllocatorUsers" property="WarnningAllocatorUsers" />
      <result column="WarnningExtendAllocators" property="WarnningExtendAllocators" />
      <result column="WarnningExtendAllocatorArgs" property="WarnningExtendAllocatorArgs" />
      <result column="ExpectFinishTime" property="ExpectFinishTime" />
    </resultMap>

    <!--<resultMap class="ReminderTimeSpan" id="ReminderTimeSpanResult">
      <result column="TimeId" property="TimeId" />
      <result column="WorkflowName" property="WorkflowName" />
      <result column="BeginHours" property="BeginHours" />
      <result column="BeginMinutes" property="BeginMinutes" />
      <result column="EndHours" property="EndHours" />
      <result column="EndMinutes" property="EndMinutes" />
    </resultMap>-->
  </resultMaps>
	
	<statements>	
    <!-- SZIntelligentRemind Begin -->
    <insert id="sz_IntelligentRemind_Insert" parameterClass="SZIntelligentRemind">
      INSERT INTO sz_Reminder_Intelligent
      (WorkflowName,ActivityName,ExtArgs,StayHours,ToHours,ToInterval,ToTimes,TimeoutInterval,RemindType,TimeoutTimes,StatisticsType,SettingType, Creator, AllocatorUsers, ExtendAllocators, ExtendAllocatorArgs,ExcludedSteps,StartActivityName,EndActivityName,WarnningAllocatorUsers,WarnningExtendAllocators,WarnningExtendAllocatorArgs,ExpectFinishTime)
      VALUES
      (#WorkflowName#,#ActivityName#,#ExtArgs#,#StayHours#,#ToHours#,#ToInterval#,#ToTimes#,#TimeoutInterval#,#RemindType#,#TimeoutTimes#,#StatisticsType#,#SettingType#,#Creator#,#AllocatorUsers#,#ExtendAllocators#,#ExtendAllocatorArgs#,#ExcludedSteps#,#StartActivityName#,#EndActivityName#,#WarnningAllocatorUsers#,#WarnningExtendAllocators#,#WarnningExtendAllocatorArgs#,#ExpectFinishTime#)
    </insert>

    <update id="sz_IntelligentRemind_Update" parameterClass="SZIntelligentRemind">
      UPDATE sz_Reminder_Intelligent
      SET WorkflowName = #WorkflowName#,ActivityName = #ActivityName#,ExtArgs = #ExtArgs#,StayHours = #StayHours#,ToHours = #ToHours#,ToInterval = #ToInterval#,
      ToTimes = #ToTimes#,TimeoutInterval = #TimeoutInterval#,TimeoutTimes = #TimeoutTimes#,StatisticsType = #StatisticsType#,
      RemindType = #RemindType#,Creator = #Creator#,CreatedTime = getdate(), AllocatorUsers = #AllocatorUsers#, ExtendAllocators = #ExtendAllocators#, ExtendAllocatorArgs = #ExtendAllocatorArgs#, ExcludedSteps = #ExcludedSteps#,
      StartActivityName = #StartActivityName#, EndActivityName = #EndActivityName#,WarnningAllocatorUsers=#WarnningAllocatorUsers#,WarnningExtendAllocators=#WarnningExtendAllocators#,WarnningExtendAllocatorArgs=#WarnningExtendAllocatorArgs#,ExpectFinishTime=#ExpectFinishTime#
      WHERE Id = #Id#
    </update>

    <delete id="sz_IntelligentRemind_Delete" parameterClass="SZIntelligentRemind">
      DELETE FROM sz_Reminder_Intelligent WHERE Id = #Id#
    </delete>

    <select id="sz_IntelligentRemind_Select" parameterClass="Hashtable" resultMap="IntelligentRemind_Result" >
      <![CDATA[
      SELECT isnull(i.Id,0) Id, wf.WorkflowName,a.ActivityName,isnull(i.ExtArgs,#ExtArgs#) ExtArgs,StayHours,
           ToHours,ToInterval,ToTimes,TimeoutInterval,
           TimeoutTimes,StatisticsType,SettingType,
           RemindType,i.Creator,i.CreatedTime, i.AllocatorUsers, i.ExtendAllocators, i.ExtendAllocatorArgs,i.ExcludedSteps,StartActivityName,EndActivityName,
           i.WarnningAllocatorUsers, i.WarnningExtendAllocators, i.WarnningExtendAllocatorArgs, i.ExpectFinishTime
      FROM bwwf_Activities a
            LEFT JOIN bwwf_Workflows wf on a.WorkflowId = wf.WorkflowId
            LEFT JOIN (select isnull(i.Id,0) Id,i.workflowname,i.activityname, isnull(i.ExtArgs,'00') ExtArgs,StayHours,
            ToHours,ToInterval,ToTimes,TimeoutInterval,
            TimeoutTimes, StatisticsType,SettingType,
            RemindType,i.Creator,i.CreatedTime, i.AllocatorUsers, i.ExtendAllocators, i.ExtendAllocatorArgs,i.ExcludedSteps,StartActivityName,EndActivityName,
            i.WarnningAllocatorUsers, i.WarnningExtendAllocators, i.WarnningExtendAllocatorArgs, i.ExpectFinishTime from sz_reminder_intelligent i
            where i.WorkflowName = #WorkflowName# and extargs=#ExtArgs#) i 
            on wf.WorkflowName = i.WorkflowName and a.ActivityName = i.ActivityName
      WHERE (wf.Enabled=1 AND IsCurrent=1 AND wf.WorkflowName = #WorkflowName#) and a.state < 2  ORDER BY sortorder asc     
      ]]>
    </select>

    <select id="sz_IntelligentRemind_Select_IsExists" parameterClass="int" resultClass="int">
      SELECT Id FROM sz_Reminder_Intelligent
      WHERE id=#value#
    </select>

    <select id="sz_IntelligentRemind_Select_Instance_IsExists" parameterClass="Hashtable" resultClass="int">
      SELECT Id FROM sz_Reminder_Intelligent
      WHERE (WorkflowName = #WorkflowName# AND SettingType = 0)
    </select>

    <select id="sz_IntelligentRemind_Select_Id_ByActivityInstanceId" parameterClass="guid" resultClass="int">
      <![CDATA[
      SELECT rit.Id
      FROM vw_bwwf_Tracking_Act_All ta
      LEFT JOIN bwwf_Activities a ON ta.ActivityId = a.ActivityId
      LEFT JOIN bwwf_Workflows w ON w.WorkflowId = a.WorkflowId
      LEFT JOIN sz_Reminder_Intelligent rit ON rit.WorkflowName = w.WorkflowName AND rit.ActivityName = a.ActivityName
      where taa1.ActivityInstanceId = #value#
      ]]>
    </select>

    <select id="sz_IntelligentRemind_Instance_Select" parameterClass="Hashtable" resultMap="IntelligentRemind_Result" >
      <![CDATA[
      SELECT i.Id, wf.WorkflowName,a.ActivityName,isnull(i.ExtArgs,'00') ExtArgs,StayHours,
            ToHours,ToInterval,ToTimes,TimeoutInterval,
            TimeoutTimes,StatisticsType,SettingType,
            RemindType,i.Creator,i.CreatedTime, i.AllocatorUsers, i.ExtendAllocators, i.ExtendAllocatorArgs,i.ExcludedSteps,StartActivityName,EndActivityName,
            i.WarnningAllocatorUsers, i.WarnningExtendAllocators, i.WarnningExtendAllocatorArgs, i.ExpectFinishTime
      FROM sz_Reminder_Intelligent i 
            LEFT JOIN bwwf_Workflows wf on i.WorkflowName = wf.WorkflowName
            left JOIN bwwf_activities a on wf.workflowid = a.workflowid and a.ActivityName = i.ActivityName
      WHERE (wf.Enabled=1 AND IsCurrent=1 AND wf.isdeleted = 0 AND wf.WorkflowName = #WorkflowName#) AND SettingType = 0 And ExtArgs = #ExtArgs# ORDER BY State
      ]]>
      <!--<dynamic prepend="WHERE">
        <isParameterPresent>SettingType = 0</isParameterPresent>
      </dynamic>-->

    </select>

    <select id="sz_IntelligentRemind_StatisticsType_Select" parameterClass="string" resultClass="int" >
      select StatisticsType from sz_Reminder_Intelligent where WorkflowName = #value#
    </select>
    
    <update id="sz_IntelligentRemind_StatisticsType_Update" parameterClass="Hashtable">
      UPDATE sz_Reminder_Intelligent
      SET StatisticsType = #StatisticsType#,
      CreatedTime = getdate()
      WHERE WorkflowName = #WorkflowName#
    </update>

    <select id="sz_IntelligentRemind_Select_By_Id" parameterClass="int" resultMap="IntelligentRemind_Result" >
      <![CDATA[
      SELECT i.Id, i.WorkflowName,i.ActivityName,isnull(i.ExtArgs,'00') ExtArgs,StayHours,
            ToHours,ToInterval,ToTimes,TimeoutInterval,
            TimeoutTimes,StatisticsType,SettingType,
            RemindType,i.Creator,i.CreatedTime, i.AllocatorUsers, i.ExtendAllocators, i.ExtendAllocatorArgs,i.ExcludedSteps,StartActivityName,EndActivityName,
            i.WarnningAllocatorUsers, i.WarnningExtendAllocators, i.WarnningExtendAllocatorArgs, i.ExpectFinishTime
      FROM sz_Reminder_Intelligent i WHERE i.Id=#value#
      ]]>
    </select>

    <select id="sz_IntelligentRemind_Select_By_WorkflowInstanceId_And_Type" parameterClass="guid" resultMap="IntelligentRemind_Result">
      <![CDATA[
      SELECT i.Id, wf.WorkflowName,i.ActivityName,isnull(i.ExtArgs,'00') ExtArgs,StayHours,
            ToHours,ToInterval,ToTimes,TimeoutInterval,
            TimeoutTimes,StatisticsType,SettingType,
            RemindType,i.Creator,i.CreatedTime, i.AllocatorUsers, i.ExtendAllocators, i.ExtendAllocatorArgs,i.ExcludedSteps,StartActivityName,EndActivityName,
            i.WarnningAllocatorUsers, i.WarnningExtendAllocators, i.WarnningExtendAllocatorArgs, i.ExpectFinishTime
      FROM sz_Reminder_Intelligent i 
            INNER JOIN bwwf_Workflows wf on i.WorkflowName = wf.WorkflowName
            INNER JOIN bwwf_Tracking_Workflows tw on wf.workflowid = tw.workflowid 
            and (case i.extargs when '00' then 0 when '01' then 1 when '02' then 2 end) = tw.Urgency
      WHERE tw.WorkflowInstanceId = #WorkflowInstanceId# AND SettingType = #SettingType#
      ]]>
    </select>

    <select id="sz_IntelligentRemind_Is_Instance" parameterClass="string" resultClass="int" >
      <![CDATA[
      select case t.expectfinishtime when null then stayhours
      else 1 end flag from sz_Reminder_Intelligent t
      inner join bwwf_workflows w on t.workflowname = w.workflowname
      inner join bwwf_tracking_workflows tw on w.workflowid = tw.workflowid
      and (case t.extargs when '00' then 0 when '01' then 1 when '02' then 2 end) = tw.Urgency where
      t.settingType = 0 and (t.stayhours > 0 or t.expectfinishtime is not null) and tw.workflowinstanceid = #value#
      ]]>
    </select>

    <select id="sz_IntelligentRemind_Is_Activity" parameterClass="Hashtable" resultClass="int" >
      <![CDATA[
      select case t.expectfinishtime when null then stayhours
      else 1 end flag from sz_Reminder_Intelligent t
      left join bwwf_workflows w on t.workflowname = w.workflowname
      left join bwwf_tracking_workflows tw on w.workflowid = tw.workflowid
      and (case t.extargs when '00' then 0 when '01' then 1 when '02' then 2 end) = tw.Urgency where
      activityname = #ActivityName# and (t.stayhours > 0 or t.expectfinishtime is not null) and t.settingType = 1 and tw.workflowinstanceid = #WorkflowInstanceId#
      ]]>
    </select>

    <!--<select id="sz_IntelligentRemind_Notify_Select" parameterClass="string" resultClass="DataTable" >
      <![CDATA[
      SELECT STEPWARNINGNOTIFYFORMAT,STEPTIMEOUTNOTIFYFORMAT,WORKORDERWARNINGNOTIFYFORMAT,WORKORDERTIMEOUTNOTIFYFORMAT FROM xqp_workflowSettings WHERE WorkflowName = #value#
      ]]>
    </select>-->

    <update id="sz_IntelligentRemind_Notify_Update" parameterClass="string" >
      <![CDATA[
      Update xqp_workflowSettings set STEPWARNINGNOTIFYFORMAT = #StepWarningNotifyformat#,STEPTIMEOUTNOTIFYFORMAT = #StepTimeoutNotifyformat#,WORKORDERWARNINGNOTIFYFORMAT = #WorkOrderWarningNotifyformat#,WORKORDERTIMEOUTNOTIFYFORMAT = #WorkOrderTimeoutNotifyformat# WHERE WorkflowName = #WorkflowName#
      ]]>
    </update>
    <!-- SZIntelligentRemind End-->
    <!-- Workflow Notify Begin-->
    <!--<select id="sz_WorkflowReminders_IsExists" parameterClass="string">
      select NotifyType from sz_Reminders where workflowinstanceid = #WorkflowInstanceId# and settingType = 0
    </select>-->
    
    <insert id="sz_WorkflowReminders_Insert" parameterClass="Hashtable">
      INSERT INTO sz_Reminders
      (MESSAGEID, MessageFrom, MessageTo, MessageBody, CreatedTime, ActivityInstanceId, SendTimes, IsCompleted, NotifyType, WORKFLOWINSTANCEID, SettingType, TimeOutSendTimes)
      VALUES
      (#MessageId#, #MessageFrom#, #MessageTo#, #MessageBody#, getdate(), #ActivityInstanceId#, 0, 0,#NotifyType#,#WorkflowInstanceId#,#SettingType#, 0)
    </insert>

    <update id="sz_WorkflowReminders_Update" parameterClass="Hashtable">
      update sz_Reminders set
       MessageFrom = #MessageFrom#, 
       MessageTo = #MessageTo#, 
       MessageBody = #MessageBody#, 
       ActivityInstanceId = #ActivityInstanceId#
      where MESSAGEID = #MessageId#
    </update>

    <delete id="sz_WorkflowReminders_Delete" parameterClass="string">
      Delete from sz_Reminders
      where workflowinstanceid = (select tw.workflowinstanceid from bwwf_tracking_workflows tw
      where tw.workflowinstanceid = #value# and tw.state > 1)
    </delete>
    <!-- Workflow Notify End-->
    
    <!-- Workflow Reminder Timespan Begin-->
    <!--<insert id="sz_ReminderTimespan_Insert" parameterClass="ReminderTimeSpan">
      INSERT INTO sz_Reminder_TimeSpans
      (WorkflowName, BeginHours, BeginMinutes, EndHours, EndMinutes)
      VALUES 
      (#WorkflowName#, #BeginHours#, #BeginMinutes#, #EndHours#, #EndMinutes#)
    </insert>

    <update id="sz_ReminderTimespan_Update" parameterClass="ReminderTimeSpan">
      UPDATE sz_Reminder_TimeSpans 
      SET BeginHours = #BeginHours#, BeginMinutes = #BeginMinutes#,
      EndHours = #EndHours#, EndMinutes = #EndMinutes#
      WHERE TimeId = #TimeId#
    </update>

    <delete id="sz_ReminderTimespan_Delete" parameterClass="int">
      DELETE FROM sz_Reminder_TimeSpans WHERE TimeId = #value#
    </delete>

    <select id="sz_ReminderTimespan_Select_By_WorkflowId" parameterClass="guid" resultMap="ReminderTimeSpanResult">
      <![CDATA[
      SELECT TimeId, WorkflowName, BeginHours, BeginMinutes, EndHours, EndMinutes
      FROM sz_Reminder_TimeSpans
      WHERE WorkflowName = (
          SELECT WorkflowName FROM bwwf_Workflows WHERE WorkflowId = #value#
      )
      ]]>
    </select>-->

    <!-- Workflow Reminder Timespan End-->
    
	</statements>
</sqlMap>
