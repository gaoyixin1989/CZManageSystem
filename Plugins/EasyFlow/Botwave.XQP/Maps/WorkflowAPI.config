<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="WorkflowAPI" xmlns="http://ibatis.apache.org/mapping"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <alias>
    <typeAlias alias="WorkflowRecord" type="Botwave.XQP.API.Entity.WorkflowRecord, Botwave.XQP" />
  </alias>

  <resultMaps>
    
    <resultMap id="WorkflowRecordResult" class="WorkflowRecord">
      <result property="ActivityInstanceId" column="ActivityInstanceId"/>
      <result property="ActivityName" column="ActivityName"/>
      <result property="CreatedTime" column="CreatedTime"/>
      <result property="CompletedTime" column="CompletedTime"/>
      <result property="Actor" column="Actor"/>
      <result property="Command" column="Command" />

    </resultMap>
      <resultMap id="ResourceInfoResult" class="ResourceInfo">
        <result property="ResourceId" column="ResourceId"/>
        <result property="ParentId" column="ParentId"/>
        <result property="Type" column="Type"/>
        <result property="Name" column="Name"/>
        <result property="Alias" column="Alias"/>
        <result property="Enabled" column="Enabled"/>
      </resultMap>
    
  </resultMaps>
  
  <statements>
    
    <select id="API_Select_WorkflowInstanceId" resultMap="WorkflowRecordResult" parameterClass="guid">
      <![CDATA[
      select cast(ActivityInstanceId as varchar(50)) as ActivityInstanceId,
isnull(cast(ta.CreatedTime as nvarchar(100)),'') as CreatedTime, 
isnull(cast(ta.FinishedTime as varchar(50)),'') as CompletedTime,
isnull(ta.Actor + '/' + u.RealName,'') AS Actor, 
isnull(ta.Command,'') as Command,
ta.ActivityName
from vw_bwwf_Tracking_Activities_All_Ext ta
left join bw_Users u ON ta.Actor = u.UserName
where cast(WorkflowInstanceId as varchar(50)) = #value#
order by ta.CreatedTime
          ]]>
    </select>

    <select id="API_Select_WorkflowState" resultClass="System.Data.DataSet" parameterClass="Hashtable">
    <![CDATA[
      select WorkflowInstanceId,SheetId,State,Title,dbo.bwwf_Workflows.Creator,
dbo.fun_bwwf_getCurrentActivityNames(WorkflowInstanceId) as ActivityName
from dbo.bwwf_Tracking_Workflows inner join dbo.bwwf_Workflows 
on dbo.bwwf_Tracking_Workflows.WorkflowId = dbo.bwwf_Workflows.WorkflowId 
and 
((cast(dbo.bwwf_Tracking_Workflows.WorkflowInstanceId as varchar(50))=#WorkflowInstanceId# or isnull(#WorkflowInstanceId#,'')='')
and
( dbo.bwwf_Tracking_Workflows.SheetId=#SheetId# or isnull(#SheetId#,'')=''))
          ]]>
    </select>

    <select id="API_Select_WorkflowMenuGroup"  resultClass="System.Data.DataSet" >
      SELECT [GroupID],[GroupName],[ShowOrder] FROM [dbo].[xqp_WorkflowMenuGroup]
      <!--<dynamic prepend="where">
        <isParameterPresent>[GroupID] = #GroupID#</isParameterPresent>
      </dynamic>-->
      ORDER BY [ShowOrder]
    </select>

      

    <select id="API_Select_WorkflowDetail" resultClass="System.Data.DataSet" parameterClass="Hashtable">
      <![CDATA[
    select a.*,b.WorkflowAlias,us.Realname as [Username],us.Mobile from (
select WorkflowInstanceId,SheetId,State,Title,Secrecy,Urgency,Importance,ExpectFinishedTime,StartedTime,FinishedTime,
dbo.bwwf_Workflows.WorkflowName,dbo.bwwf_Tracking_Workflows.Creator,dbo.bwwf_Workflows.CreatedTime,dbo.bwwf_Workflows.WorkflowId,
dbo.fun_bwwf_getCurrentActivityNames(WorkflowInstanceId) as ActivityName,
dbo.fun_bwwf_getCurrentActors(WorkflowInstanceId) as CurrentActors
from dbo.bwwf_Tracking_Workflows inner join dbo.bwwf_Workflows 
on dbo.bwwf_Tracking_Workflows.WorkflowId=dbo.bwwf_Workflows.WorkflowId
and 
((dbo.bwwf_Tracking_Workflows.SheetId=#SheetId# or isnull(#SheetId#,'')='' ) and
 ((cast(dbo.bwwf_Tracking_Workflows.WorkflowInstanceId as varchar(50))=#WorkflowInstanceId#) or isnull(#WorkflowInstanceId#,'')=''))) a
left join (select workflowAlias,workflowName from dbo.bwwf_WorkflowSettings) b on a.WorkflowName=b.WorkflowName
inner join dbo.bw_Users us on us.username=a.creator
          ]]>
    </select>

    <select id="API_Select_WorkflowDetail_Field" resultClass="System.Data.DataSet" parameterClass="guid">
      <![CDATA[
      select Fname as [Key],[Name],
case when value_str is null then
	case when cast(value_decimal as int) = 0 then
		value_text
	else
		cast (value_decimal as varchar(50))
	end
else
	value_str
end as [Value]
from dbo.bwdf_FormItemDefinitions a,dbo.bwdf_FormItemInstances b
where a.id=b.FormItemDefinitionId  and b.FormInstanceId=#value#
          ]]>
    </select>

    <select id="API_Select_WorkflowDetail_Activitys" resultClass="System.Data.DataSet" parameterClass="guid">
      <![CDATA[
      select UserName as [Actors],ActivityName as [Name] from (
select dbo.fun_bwwf_getActivityActors(ActivityInstanceId,0) as UserName,a.NextActivitySetId from 
dbo.bwwf_Tracking_Activities  b,bwwf_Activities a where a.ActivityId=b.ActivityId and cast(WorkflowInstanceId as varchar(50))=#value#) f
, (select SetID,ActivityName from bwwf_Activities a,bwwf_ActivitySet b where a.ActivityId=b.ActivityId ) g
where f.NextActivitySetId=g.setid
          ]]>
    </select>

    <select id="API_Select_WorkflowDetail_Attachment" resultClass="System.Data.DataSet" parameterClass="Hashtable">
      <![CDATA[
      SELECT att.CreatedTime,att.Creator,us.realname as [Username],att.Title as [Name],att.[FileName] as Url FROM dbo.xqp_Attachment  att inner join dbo.bw_Users us on us.username=att.creator WHERE ID in(
SELECT AttachmentId FROM dbo.xqp_Attachment_Entity WHERE ENTITYID=#WorkflowInstanceId# and entitytype=#EntityType#)
          ]]>
    </select>

    <select id="API_Select_WorkflowRecord_ActivityInstance" resultClass="System.Data.DataSet" parameterClass="Hashtable">
      <![CDATA[
      select ActivityInstanceId,WorkflowInstanceId,ta.SheetId,
      ta.CreatedTime, ta.FinishedTime,
      ta.Actor + '/' + u.RealName AS Actor,
      case when ta.Command='approve' then '1' else case when ta.Command='reject' then '0' else '-1' end end Command,  
      Reason as [Message],
      ta.ActivityName
      from vw_bwwf_Tracking_Activities_All_Ext ta
      left join bw_Users u ON ta.Actor = u.UserName
      where 
      (
      (cast(WorkflowInstanceId as varchar(50)) = #WorkflowInstanceId# or isnull(#WorkflowInstanceId#,'')='' )
      and
      (SheetId = #SheetId# or isnull(#SheetId#,'')='' )
      )
      order by ta.CreatedTime
          ]]>
    </select>
    <select id="API_Select_WorkflowRecord_Assignment" parameterClass="guid" resultClass="System.Data.DataSet" >
      <![CDATA[
      SELECT tass.ActivityInstanceId, tass.AssignedTime, tass.Message, 
      AssignedUser + '/' +AssignedUsers.RealName AS AssignedUser, AssigningUser+'/'+AssigningUsers.RealName AS AssigningUser,
      '2' as Command
      FROM bwwf_Tracking_Assignments tass LEFT JOIN
      bw_Users AssigningUsers ON 
      AssigningUsers.UserName = tass.AssigningUser LEFT JOIN
      bw_Users AssignedUsers ON tass.AssignedUser = AssignedUsers.UserName
      WHERE tass.ActivityInstanceId IN (
      SELECT ActivityInstanceId FROM vw_bwwf_Tracking_Activities_All
      WHERE cast(WorkflowInstanceId as varchar(50)) = #value#
      )
      ORDER BY tass.AssignedTime
      ]]>
    </select>
    <select id="API_Select_WorkflowRecord_Countersigned" parameterClass="guid" resultClass="System.Data.DataSet">
      select ActivityInstanceId,co.UserName+'/'+us.realname as Actor,[Message],co.CreatedTime,'1' as Command from bwwf_Tracking_Countersigned co
      left join bw_users us on co.UserName=us.username
      where ActivityInstanceId = #value#
      order by co.CreatedTime desc
    </select>



    <select id="API_Select_WorkflowInfo_Field" parameterClass="Hashtable" resultClass="System.Data.DataSet">
      select FName, [Name], Comment, ItemDataType, ItemType, DataSource,
      DataBinder, DefaultValue, [Left], [Top], Width, Height, RowExclusive, Require,ValidateType, MaxVal, MinVal, Op, OpTarget, ErrorMessage, ShowSet, WriteSet, ReadonlySet, fid.CreatedTime
      from dbo.bwwf_workflowsettings gr
      inner join dbo.bwwf_Workflows wf on wf.workflowname=gr.workflowname and iscurrent=1 and (gr.WorkflowAlias=#WorkflowAlias# or gr.workflowname=#WorkflowName# )
      inner join dbo.bwdf_FormDefinitionInExternals fdi on fdi.entityid=wf.workflowid
      inner join dbo.bwdf_FormItemDefinitions fid on fid.FormDefinitionid=fdi.FormDefinitionid
    </select>

    <select id="API_Select_WorkflowInfo_Activity" parameterClass="Hashtable" resultClass="System.Data.DataSet">
      select  wc.*
      from dbo.bwwf_workflowsettings gr
      inner join dbo.bwwf_Workflows wf
      on gr.workflowname=wf.workflowname and (gr.WorkflowAlias=#WorkflowAlias# or gr.workflowname=#WorkflowName# ) and iscurrent=1
      inner join dbo.bwwf_Activities wc
      on wc.workflowid=wf.workflowid
      where state=0
    </select>

    <select id="API_Select_WorkflowInfo_Activities_Profile" parameterClass="Hashtable" resultClass="System.Data.DataSet">
      select  wf.*
      from dbo.bwwf_workflowsettings gr
      inner join dbo.xqp_Activities_Profile wf
      on gr.WorkflowName=wf.WorkflowName and (gr.WorkflowAlias=#WorkflowAlias# or gr.WorkflowName=#WorkflowName# )
      where wf.ActivityName=#ActivityName#
    </select>
    


    <select id="API_Select_Workflow_UserName" parameterClass="String" resultClass="System.Data.DataSet">
        select realname+'/'+username Names from dbo.bw_Users where username =#value#
    </select>

    <select id="API_Select_Workflow_RealName" parameterClass="String" resultClass="System.Data.DataSet">
      select realname Names from dbo.bw_Users where username =#value#
    </select>
    
    <select id="API_Select_Workflow_Comment_Attachment" parameterClass="Hashtable" resultClass="System.Data.DataSet">
      SELECT atta.*, attaEntity.EntityId FROM (SELECT [Id], Title, [FileName], MimeType, FileSize, Remark ,creator,createdtime
      FROM xqp_Attachment
      WHERE [Id] IN(
      SELECT AttachmentId FROM xqp_Attachment_Entity WHERE EntityType = #EntityType# AND EntityId IN(
      SELECT [Id] FROM bwwf_Tracking_Comments WHERE cast(WorkflowInstanceId as varchar(50)) = #WorkflowInstanceId#
      )
      )) atta LEFT JOIN xqp_Attachment_Entity attaEntity ON atta.[Id] = attaEntity.AttachmentId
    </select>

    <insert id="API_Insert_Workflow_Comment_Attachment" parameterClass="Hashtable" resultClass="System.Data.DataSet">
      insert into xqp_Attachment(Id,Creator,LastModifier,CreatedTime,LastModTime,Title,FileName,MimeType)
      values (#Id#,#Creator#,#Creator#,#CreatedTime#,#CreatedTime#,#Title#,#FileName#,#MimeType#)
    </insert>
    <insert id="API_Insert_Workflow_Comment_AttachmentEntityType" parameterClass="Hashtable" resultClass="System.Data.DataSet">
      INSERT INTO [dbo].[xqp_Attachment_Entity]    ([AttachmentId], [EntityId], [EntityType])    VALUES(#AttachmentId#,#EntityId#,#EntityType#)
    </insert>
    <select id="API_Select_Workflow_Start_WorkflowId" parameterClass="String" resultClass="System.Data.DataSet">
      select WorkflowId from dbo.bwwf_Workflows where cast(WorkflowId as varchar(50))=#value# or WorkflowName=#value# and iscurrent=1
    </select>
    <select id="API_Select_Workflow_Start_ActivityId" parameterClass="Hashtable" resultClass="System.Data.DataSet">
      select ActivityId from dbo.bwwf_Activities where WorkflowId=#WorkflowId# and ActivityName=#ActivityName#
    </select>

    <select id="API_Select_UserKey" parameterClass="String" resultClass="System.Data.DataSet">
      select * from [bw_UsersKey] a right join [bw_Users] b on
      a.username=b.username  where b.username=#value#
    </select>

    <select id="API_Select_User" parameterClass="String" resultClass="System.Data.DataSet">
      select * from  [bw_Users]
      where username=#value#
    </select>

    <select id="API_Resources_Select_ByUserName" parameterClass="Hashtable" resultMap="ResourceInfoResult">
      <![CDATA[
      SELECT ResourceId, ParentId, Type, Name, Alias, Enabled
      FROM bw_Resources
      WHERE (ResourceId LIKE 'WF%') AND ResourceId IN(
	          SELECT ResourceId FROM bw_RolesInResources rir
                  WHERE rir.RoleId IN(
		                SELECT RoleId FROM bw_UsersInRoles where UserId IN(
			                  (SELECT UserId FROM bw_Users WHERE ([UserName] = #UserName#))
			                  UNION
			                  (
				                  SELECT ba.FromUserId FROM bw_Authorizations ba
			                      WHERE ba.Enabled = 1 AND IsFullAuthorized = 1 AND ba.BeginTime <= getdate() 
					                  AND ba.EndTime >= getdate() AND (ba.ToUserId = (SELECT UserId FROM bw_Users WHERE ([UserName] = #UserName#)))
			                  )
		              )
	          )
      )
      ]]>
    </select>
  </statements>
</sqlMap>