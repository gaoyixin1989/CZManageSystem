//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
namespace Botwave.XQP.Service.ExternalProxies
{
    using System;
    using System.ComponentModel;
    using System.Diagnostics;
    using System.Web.Services;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;

    // 
    // 此源代码由 wsdl 自动生成, Version=2.0.50727.1432。
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "WorkflowCooperationSoap", Namespace = "http://xqp2.gz.gmcc.net/WS/")]
    public partial class WorkflowCooperation : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback ExecuteActivityOperationCompleted;

        private System.Threading.SendOrPostCallback CopyWorkflowInstanceOperationCompleted;

        /// <remarks/>
        public WorkflowCooperation()
        {
            this.Url = "http://xqp2.gz.gmcc.net/WS/WorkflowCooperation.asmx";
        }

        /// <remarks/>
        public event ExecuteActivityCompletedEventHandler ExecuteActivityCompleted;

        /// <remarks/>
        public event CopyWorkflowInstanceCompletedEventHandler CopyWorkflowInstanceCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xqp2.gz.gmcc.net/WS/ExecuteActivity", RequestNamespace = "http://xqp2.gz.gmcc.net/WS/", ResponseNamespace = "http://xqp2.gz.gmcc.net/WS/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActionResult ExecuteActivity(string sysAccount, string sysPassword, System.Guid activityInstanceId, string command)
        {
            object[] results = this.Invoke("ExecuteActivity", new object[] {
                    sysAccount,
                    sysPassword,
                    activityInstanceId,
                    command});
            return ((ActionResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginExecuteActivity(string sysAccount, string sysPassword, System.Guid activityInstanceId, string command, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ExecuteActivity", new object[] {
                    sysAccount,
                    sysPassword,
                    activityInstanceId,
                    command}, callback, asyncState);
        }

        /// <remarks/>
        public ActionResult EndExecuteActivity(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ActionResult)(results[0]));
        }

        /// <remarks/>
        public void ExecuteActivityAsync(string sysAccount, string sysPassword, System.Guid activityInstanceId, string command)
        {
            this.ExecuteActivityAsync(sysAccount, sysPassword, activityInstanceId, command, null);
        }

        /// <remarks/>
        public void ExecuteActivityAsync(string sysAccount, string sysPassword, System.Guid activityInstanceId, string command, object userState)
        {
            if ((this.ExecuteActivityOperationCompleted == null))
            {
                this.ExecuteActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteActivityOperationCompleted);
            }
            this.InvokeAsync("ExecuteActivity", new object[] {
                    sysAccount,
                    sysPassword,
                    activityInstanceId,
                    command}, this.ExecuteActivityOperationCompleted, userState);
        }

        private void OnExecuteActivityOperationCompleted(object arg)
        {
            if ((this.ExecuteActivityCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteActivityCompleted(this, new ExecuteActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://xqp2.gz.gmcc.net/WS/CopyWorkflowInstance", RequestNamespace = "http://xqp2.gz.gmcc.net/WS/", ResponseNamespace = "http://xqp2.gz.gmcc.net/WS/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActionResult CopyWorkflowInstance(string sysAccount, string sysPassword, System.Guid workflowInstanceId)
        {
            object[] results = this.Invoke("CopyWorkflowInstance", new object[] {
                    sysAccount,
                    sysPassword,
                    workflowInstanceId});
            return ((ActionResult)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCopyWorkflowInstance(string sysAccount, string sysPassword, System.Guid workflowInstanceId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CopyWorkflowInstance", new object[] {
                    sysAccount,
                    sysPassword,
                    workflowInstanceId}, callback, asyncState);
        }

        /// <remarks/>
        public ActionResult EndCopyWorkflowInstance(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ActionResult)(results[0]));
        }

        /// <remarks/>
        public void CopyWorkflowInstanceAsync(string sysAccount, string sysPassword, System.Guid workflowInstanceId)
        {
            this.CopyWorkflowInstanceAsync(sysAccount, sysPassword, workflowInstanceId, null);
        }

        /// <remarks/>
        public void CopyWorkflowInstanceAsync(string sysAccount, string sysPassword, System.Guid workflowInstanceId, object userState)
        {
            if ((this.CopyWorkflowInstanceOperationCompleted == null))
            {
                this.CopyWorkflowInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyWorkflowInstanceOperationCompleted);
            }
            this.InvokeAsync("CopyWorkflowInstance", new object[] {
                    sysAccount,
                    sysPassword,
                    workflowInstanceId}, this.CopyWorkflowInstanceOperationCompleted, userState);
        }

        private void OnCopyWorkflowInstanceOperationCompleted(object arg)
        {
            if ((this.CopyWorkflowInstanceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyWorkflowInstanceCompleted(this, new CopyWorkflowInstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://xqp2.gz.gmcc.net/WS/")]
    public partial class ActionResult
    {

        private int appAuthField;

        private bool returnValueField;

        private string returnMessageField;

        /// <remarks/>
        public int AppAuth
        {
            get
            {
                return this.appAuthField;
            }
            set
            {
                this.appAuthField = value;
            }
        }

        /// <remarks/>
        public bool ReturnValue
        {
            get
            {
                return this.returnValueField;
            }
            set
            {
                this.returnValueField = value;
            }
        }

        /// <remarks/>
        public string ReturnMessage
        {
            get
            {
                return this.returnMessageField;
            }
            set
            {
                this.returnMessageField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void ExecuteActivityCompletedEventHandler(object sender, ExecuteActivityCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ExecuteActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ActionResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ActionResult)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void CopyWorkflowInstanceCompletedEventHandler(object sender, CopyWorkflowInstanceCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyWorkflowInstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CopyWorkflowInstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ActionResult Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ActionResult)(this.results[0]));
            }
        }
    }
}