<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="WorkflowExtensionSpace" xmlns="http://ibatis.apache.org/mapping"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <cacheModels>
    <cacheModel id="wfextention-cache" implementation="LRU" readOnly="true" serialize="false">
      <flushInterval hours="24"/>
      <property name="CacheSize" value="200"/>
    </cacheModel>
  </cacheModels>
  
  <alias>
    <typeAlias alias="NotifyActor" type="Botwave.Workflow.Extension.Domain.NotifyActor, Botwave.Workflow.Extension" />
    <typeAlias alias="ActorDetail" type="Botwave.Workflow.Extension.Domain.ActorDetail, Botwave.Workflow.Extension" />
    <typeAlias alias="TooltipInfo" type="Botwave.Workflow.Extension.Domain.TooltipInfo, Botwave.Workflow.Extension" />
    <typeAlias alias="ResourceProperty" type="Botwave.Workflow.Extension.Domain.ResourceProperty, Botwave.Workflow.Extension" />
  </alias>

  <resultMaps>
    <resultMap id="NotifyActorResult" class="NotifyActor">
      <result column="ActivityInstanceId" property="ActivityInstanceId" />
      <result column="ActivityName" property="ActivityName" />
      <result column="UserName" property="UserName" />
      <result column="RealName" property="RealName" />
      <result column="Email" property="Email" />
      <result column="Mobile" property="Mobile" />
      <result column="EmployeeId" property="EmployeeId" />
    </resultMap>
    
    <resultMap id="ActorDetailResult" class="ActorDetail">
      <result column="UserName" property="UserName" />
      <result column="RealName" property="RealName" />
      <result column="DpFullName" property="DpFullName" />
      <result column="Email" property="Email" />
      <result column="Tel" property="Tel" />
      <result column="Mobile" property="Mobile" />
      <result column="EmployeeId" property="EmployeeId" />
    </resultMap>
    
    <resultMap id="TooltipInfoResult" class="TooltipInfo">
      <result column="UserName" property="UserName" />
      <result column="RealName" property="RealName" />
      <result column="DpFullName" property="DpFullName" />
      <result column="Email" property="Email" />
      <result column="Tel" property="Tel" />
      <result column="Mobile" property="Mobile" />
      <result column="WorkingCount" property="WorkingCount" />
    </resultMap>
    
    <resultMap id="ResourcePropertyResult" class="ResourceProperty">
      <result column="ResourceId" property="ResourceId" />
      <result column="ParentId" property="ParentId" />
      <result column="WorkflowName" property="WorkflowName" />
      <result column="Name" property="Name" />
      <result column="Alias" property="Alias" />
      <result column="Type" property="Type" />
      <result column="Visible" property="Visible" />
      <result column="SortIndex" property="SortIndex" />
    </resultMap>
  </resultMaps>

  <statements>
    <!-- extension Workflow(begin) -->
    <select id="bwwf_Workflows_Select_WfName_ByWorkflowId" resultClass="string" parameterClass="guid">
      SELECT WorkflowName FROM bwwf_Workflows
      WHERE WorkflowId = #value#
    </select>
    <select id="bwwf_Tracking_Workflows_Select_State_BySheetId" resultClass="int" parameterClass="string">
      SELECT TOP 1 State FROM bwwf_Tracking_Workflows
      WHERE SheetId = #value#
    </select>
    <!-- extension Workflow(end) -->
    
    <!-- extension Notify Actor(begin) -->
    <select id="bwwf_WorkflowNotifyActors_Select_Current" parameterClass="guid" resultMap="NotifyActorResult">
      <![CDATA[
         select tt.ActivityInstanceId, activity.ActivityName, tt.UserName, u.RealName, u.Email, u.Mobile, u.EmployeeId
          from bwwf_Tracking_Todo as tt
              left join bwwf_Tracking_Activities as ta on tt.ActivityInstanceId = ta.ActivityInstanceId
              left join bwwf_Activities as a on a.ActivityId = ta.ActivityId
              left join bwwf_Tracking_Workflows as tw on tw.WorkflowInstanceId = ta.WorkflowInstanceId
              left join bwwf_Workflows w ON w.WorkflowId = tw.WorkflowId
              left join bw_Users u on tt.UserName = u. UserName
              left join bwwf_Activities as activity on ta.ActivityId = activity.ActivityId
          WHERE tt.ActivityInstanceId = #value# 
      ]]>
    </select>

    <select id="bwwf_WorkflowNotifyActors_Select_Next" parameterClass="guid" resultMap="NotifyActorResult">
      <![CDATA[
        select tt.ActivityInstanceId, activity.ActivityName, tt.UserName, u.RealName, u.Email, u.Mobile, u.EmployeeId
        from bwwf_Tracking_Todo as tt
          left join bwwf_Tracking_Activities as ta on tt.ActivityInstanceId = ta.ActivityInstanceId
          left join bwwf_Tracking_Workflows as w on w.WorkflowInstanceId = ta.WorkflowInstanceId
          left join bwwf_Activities as a on a.ActivityId = ta.ActivityId
          left join bw_Users u on tt.UserName = u. UserName
		  left join bwwf_Activities as activity on ta.ActivityId = activity.ActivityId
        where ta.PrevSetId = (
        	select top 1 SetId from bwwf_Tracking_Activities_Set 
			    where ActivityInstanceId = #value#
        )
      ]]>
    </select>
    <!-- extension Notify Actor(end) -->
    
    <!-- extension Resource(begin) -->
    <insert id="bwwf_Resources_Insert" parameterClass="ResourceProperty">
      <![CDATA[
      INSERT INTO bw_Resources
          (ResourceId, ParentId, Type, Name, Alias, Enabled, CreatedTime, Visible, SortIndex)
      VALUES
          (#ResourceId#, #ParentId#, #Type#,  #Name#,  #Alias#,  1, getdate(), #Visible#, #SortIndex#)
      ]]>
    </insert>

    <update id="bwwf_Resources_Update_Visible" parameterClass="Hashtable">
      update bw_Resources
      set Visible = #Visible#
      where ResourceId = #ResourceId#
    </update>

    <update id="bwwf_Resources_Update_Visible_ByWorkflowId" parameterClass="Hashtable">
      <![CDATA[
      update bw_Resources
      set Visible = #Visible#
      where (ParentId = '11') AND Alias = (
          select WorkflowName from bwwf_Workflows
          where WorkflowId = #WorkflowId#
      )
      ]]>
    </update>
    
    <select id="bwwf_Resources_Select_MaxId_ByParentId" parameterClass="string" resultClass="string">
      select max(ResourceId) from bw_Resources
      where ParentId = #value#
    </select>
    
    <select id="bwwf_Resources_Select_ResourceId_ByWorkflows" resultClass="string" parameterClass="Hashtable">
      <![CDATA[
      SELECT ResourceId FROM bw_Resources
      WHERE ([Type] = #ResourceType#) AND ([Alias] = #ResourceName#)
          AND ParentId = (
              SELECT ResourceId FROM bw_Resources WHERE (Alias = #WorkflowName#) AND (ParentId = '11')
          )
       ]]>
    </select>
    <select id="bwwf_Resources_Select_ResourceId_ByWorkflowId" parameterClass="guid" resultClass="string">
      <![CDATA[
      select ResourceId from bw_Resources
      where ParentId = '11' AND Alias = (
          select WorkflowName from bwwf_Workflows where WorkflowId = #value#
      )
       ]]>
    </select>
    <select id="bwwf_Resources_Select_ResourceId_ByWorkflowName" parameterClass="guid" resultClass="string">
      select ResourceId from bw_Resources
      where (ParentId = '11') AND (Alias =  #value#)
    </select>
    <select id="bwwf_Resources_Select_Alias_ByResourceId" resultClass="string" parameterClass="string">
      SELECT Alias FROM bw_Resources
      WHERE ResourceId = #value#
    </select>
    <select id="bwwf_Resources_Select_ResourceId_ByAlias" resultClass="string" parameterClass="string">
      SELECT TOP 1 ResourceId FROM bw_Resources
      WHERE [Alias] = #value#
    </select>
    <select id="bwwf_Resources_Select_ByWorkflowNameAndType" parameterClass="Hashtable" resultClass="ResourceProperty">
      <![CDATA[
      select ResourceId, ParentId, Name, Alias, Type, Visible, SortIndex
      from bw_Resources
      where (Type = #Type#) and (ParentId in (
            select ResourceId from bw_Resources
				        where [Alias] = #WorkflowName# and ParentId = '11'))
      order by ResourceId
       ]]>
    </select>
    <select id="bwwf_Resources_Select_ByParentIdAndType" parameterClass="Hashtable" resultClass="ResourceProperty">
      <![CDATA[
      select ResourceId, ParentId, Name, Alias, Type, Visible, SortIndex
      from bw_Resources
      where (Type = #Type#) and (ParentId = #ParentId#)
      order by ResourceId
       ]]>
    </select>
    <!-- extension Resource(end) -->
    
    <!-- ActorDetail Begin-->
    <select id="bwwf_Users_Select_ActorDetail" parameterClass="string" resultMap="ActorDetailResult" cacheModel="wfextention-cache">
      SELECT UserName, RealName, Email, Mobile, Tel, DpFullName, EmployeeId
      FROM vw_bw_Users_Detail
      <dynamic prepend="where">
        <isParameterPresent>
          UserName = #value#
        </isParameterPresent>
      </dynamic>
      ORDER BY UserName
    </select>
    
    <select id="bwwf_Users_Select_RealName_ByUserName" parameterClass="string" resultClass="string" cacheModel="wfextention-cache">
      SELECT RealName FROM bw_Users
      WHERE UserName = #value#
    </select>
    <!-- ActorDetail End-->

    <!-- Tooltip Begin-->
    <select id="bwwf_Users_Select_TooltipInfo" parameterClass="string" resultMap="TooltipInfoResult">
      SELECT u.UserName, u.RealName, u.Email, u.Mobile, u.Tel, dp.DpFullName,
        (SELECT COUNT(0)FROM vw_bwwf_Tracking_Todo with(nolock) WHERE userName = u.UserName) AS WorkingCount
      FROM bw_Users u 
        LEFT OUTER JOIN bw_Depts dp ON u.DpId = dp.DpId
      <dynamic prepend="where">
        <isParameterPresent>
          u.UserName = #value#
        </isParameterPresent>
      </dynamic>
      ORDER BY u.UserName
    </select>
    <!-- Tooltip End-->
    
    <!-- workflow from(begin) -->
    <select id="bwwf_WorkflowInstances_Select_State_ByWorkflowInstanceId" parameterClass="guid" resultClass="int">
      <![CDATA[
        SELECT State FROM bwwf_Tracking_Workflows
        WHERE (WorkflowInstanceId = #value#)
       ]]>
    </select>
    <!--  workflow from(end) -->
  </statements>
</sqlMap>
