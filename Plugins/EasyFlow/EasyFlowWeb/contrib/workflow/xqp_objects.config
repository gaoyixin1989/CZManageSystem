<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net" >
  <description>bwxqp-workflow</description>

  <!-- parser (begin) -->
  <object id="joinConditionParser"
           type="Botwave.Workflow.Parser.DefaultJoinConditionParser, Botwave.Workflow.Core" />

  <object id="splitConditionParser"
           type="Botwave.Workflow.Parser.DefaultSplitConditionParser, Botwave.Workflow.Core" />

  <object id="commandRulesParser"
          type="Botwave.Workflow.IBatisNet.VelocityCommandRulesParser, Botwave.Workflow.IBatisNet" >
  </object>
  <!-- parser (end) -->

  <!-- allocators (begin) -->
  <object id="usersTaskAllocator"
        type="Botwave.Workflow.Allocator.UsersTaskAllocator, Botwave.Workflow.Core" />

  <object id="starterTaskAllocator"
        type="Botwave.Workflow.IBatisNet.WorkflowStarterTaskAllocator, Botwave.Workflow.IBatisNet" />

  <object id="processorTaskAllocator"
        type="Botwave.Workflow.IBatisNet.WorkflowProcessorTaskAllocator, Botwave.Workflow.IBatisNet" />

  <object id="resourceTaskAllocator"
        type="Botwave.Workflow.Extension.Service.Plugins.ResourceTaskAllocator, Botwave.Workflow.Extension" />

  <object id="taskAllocatorManager"
            type="Botwave.Workflow.Allocator.DefaultTaskAllocatorManager, Botwave.Workflow.Core">
    <property name="AllocatorDict">
      <dictionary>
        <entry key="users" value-ref="usersTaskAllocator"/>
        <entry key="starter" value-ref="starterTaskAllocator"/>
        <entry key="processor" value-ref="processorTaskAllocator"/>
        <entry key="superior" value-ref="superiorTaskAllocator"/>
        <entry key="resource" value-ref="resourceTaskAllocator"/>
        <entry key="field" value-ref="xqpFieldTaskAllocator"/>
        <entry key="expense" value-ref="expenseTaskAllocator"/>
        <entry key="role" value-ref="roleTaskAllocator"/>
        <entry key="activity" value-ref="activityTaskAllocator"/>
        <entry key="owner" value-ref="customizeTaskAllocator"/>
      </dictionary>
    </property>
  </object>
  <!-- allocators (end) -->

  <!-- core service (begin) -->
  <object id="workflowEngine"
          type="Botwave.Workflow.DefaultWorkflowEngine, Botwave.Workflow.Core">
    <property name="activityExecutionService" ref="activityExecutionService"/>
  </object>

  <object id="workflowDefinitionService"
          type="Botwave.Workflow.IBatisNet.WorkflowDefinitionService, Botwave.Workflow.IBatisNet">
  </object>

  <object id="workflowService"
          type="Botwave.Workflow.IBatisNet.WorkflowService, Botwave.Workflow.IBatisNet">
  </object>

  <object id="workflowSettingService"
          type="Botwave.Workflow.IBatisNet.WorkflowSettingService, Botwave.Workflow.IBatisNet">
  </object>

  <object id="workflowPagerService"
          type="Botwave.Workflow.IBatisNet.WorkflowPagerService, Botwave.Workflow.IBatisNet">
  </object>

  <object id="activityDefinitionService"
          type="Botwave.Workflow.IBatisNet.ActivityDefinitionService, Botwave.Workflow.IBatisNet">
  </object>

  <object id="activityService"
          type="Botwave.Workflow.IBatisNet.ActivityService, Botwave.Workflow.IBatisNet">
  </object>

  <object id="activitySetService"
          type="Botwave.Workflow.IBatisNet.ActivitySetService, Botwave.Workflow.IBatisNet">
  </object>

  <object id="activityAllocationService"
          type="Botwave.Workflow.IBatisNet.ActivityAllocationService, Botwave.Workflow.IBatisNet">
    <property name="taskAllocatorManager" ref="taskAllocatorManager"/>
    <property name="userProxy" ref="userProxy"/>
  </object>

  <object id="countersignedService"
          type="Botwave.Workflow.IBatisNet.CountersignedService, Botwave.Workflow.IBatisNet">
  </object>

  <object id="taskAssignService"
          type="Botwave.Workflow.IBatisNet.TaskAssignService, Botwave.Workflow.IBatisNet">
    <property name="activityAllocationService" ref="activityAllocationService"/>
    <property name="postAssignHandler" ref="postAssignHandler"/>
  </object>

  <object id="deployService"
          type="Botwave.Workflow.IBatisNet.DeployService, Botwave.Workflow.IBatisNet">
    <property name="workflowDefinitionService" ref="workflowDefinitionService"/>
    <property name="activityDefinitionService" ref="activityDefinitionService"/>
    <property name="postDeployHandler" ref="postDeployHandler"/>
    <property name="resourceTranslator" ref="resourceTranslator"/>
    <property name="preCommitDeployHandler" ref="preCommitDeployHandler"/>
  </object>

  <object id="activityExecutionService"
          type="Botwave.Workflow.IBatisNet.ActivityExecutionService, Botwave.Workflow.IBatisNet">
    <property name="activityExecutionHandlerManager" ref="activityExecutionHandlerManager"/>
    <property name="decisionParserManager" ref="decisionParserManager"/>
    <property name="activityDefinitionService" ref="activityDefinitionService"/>
    <property name="activityService" ref="activityService"/>
    <property name="workflowDefinitionService" ref="workflowDefinitionService"/>
    <property name="workflowService" ref="workflowService"/>
    <property name="postActivityExecutionHandler" ref="postActivityExecutionHandler"/>
    <property name="postCancelWorkflowHandler" ref="postCancelWorkflowHandler"/>
    <property name="postCompleteWorkflowHandler" ref="postCompleteWorkflowHandler"/>
    <property name="preDeleteWorkflowHandler" ref="preDeleteWorkflowHandler"/>
    <property name="commandRulesParser" ref="commandRulesParser"/>
    <property name="joinConditionParser" ref="joinConditionParser"/>
    <property name="activityAllocationService" ref="activityAllocationService"/>
    <!--<property name="postCloseParallelActivityInstancesHandler" ref="postCloseParallelActivityInstancesHandler"/>-->
    <property name="postCloseParallelActivityInstancesHandler" ref="xqpPostCloseParallelActivityInstancesHandler"/>
    <property name="userProxy" ref="userProxy"/>
    <property name="userProxyNotifier" ref="userProxyNotifier"/>
    <property name="countersignedService" ref="countersignedService"/>
    <property name="countersignedConditionParser" ref="splitConditionParser"/>
    <property name="joinConditionHandlerManager" ref="joinConditionHandlerManager"/>
  </object>

  <object id="commentService"
          type="Botwave.Workflow.IBatisNet.CommentService, Botwave.Workflow.IBatisNet">
  </object>

  <object id="reportService"
          type="Botwave.Workflow.IBatisNet.ReportService, Botwave.Workflow.IBatisNet">
  </object>
  <!-- core service (end) -->

  <!-- extension plugins (begin) -->
  
  <object id="activityExecutionHandlerManager"
           type="Botwave.Workflow.Extension.Service.Plugins.ActivityExecutionHandlerManager, Botwave.Workflow.Extension" />
  <!--wbl-->

  <object id="joinConditionHandlerManager"
           type="Botwave.Workflow.Extension.Service.Plugins.JoinConditionHandlerManager, Botwave.Workflow.Extension" />

  <object id="joinConditionHandler"
           type="Botwave.Workflow.Extension.Service.Plugins.JoinConditionHandler, Botwave.Workflow.Extension" />

  <object id="decisionParserManager"
           type="Botwave.Workflow.Extension.Service.Plugins.DecisionParserManager, Botwave.Workflow.Extension" />

  <object id="postActivityExecutionHandler"
           type="Botwave.Workflow.Extension.Service.Plugins.PostActivityExecutionHandler, Botwave.Workflow.Extension">
    <property name="next" ref="xqpPostActivityExecutionHandler"/>
  </object>

  <object id="postAssignHandler"
           type="Botwave.Workflow.Extension.Service.Plugins.PostAssignHandler, Botwave.Workflow.Extension">
    <property name="next" ref="xqpPostAssignHandler"/>
  </object>

  <object id="postCountersignedHandler"
           type="Botwave.Workflow.Extension.Service.Plugins.PostCountersignedHandler, Botwave.Workflow.Extension" />

  <object id="postCompleteWorkflowHandler"
           type="Botwave.Workflow.Extension.Service.Plugins.PostCompleteWorkflowHandler, Botwave.Workflow.Extension">
  </object>

  <!--<object id="postCancelWorkflowHandler"
           type="Botwave.Workflow.Extension.Service.Plugins.PostCancelWorkflowHandler, Botwave.Workflow.Extension">
    <property name="next" ref="xqpPostCancelWorkflowHandler"/>
  </object>-->
  <object id="postCancelWorkflowHandler"
           type="Botwave.XQP.Service.Plugins.PostCancelWorkflowHandler, Botwave.XQP" />

  <object id="preDeleteWorkflowHandler"
           type="Botwave.Workflow.Extension.Service.Plugins.PreDeleteWorkflowHandler, Botwave.Workflow.Extension" />

  <object id="postCloseParallelActivityInstancesHandler"
           type="Botwave.Workflow.Extension.Service.Plugins.PostCloseParallelActivityInstancesHandler, Botwave.Workflow.Extension" />

  <object id="postDeployHandler"
           type="Botwave.Workflow.Extension.Service.Plugins.PostDeployHandler, Botwave.Workflow.Extension">
    <property name="workflowSettingService" ref="workflowSettingService"/>
    <property name="workflowFormService" ref="workflowFormService"/>
    <property name="next" ref="xqpPostDeployHandler"/>
  </object>
    <object id="xqpPostDeployHandler"
           type="Botwave.XQP.Service.Plugins.PostDeployHandler, Botwave.XQP" >
    <property name="roleService" ref="roleService"/>
    <property name="workflowAttachmentService" ref="xqpWorkflowAttachmentService"/>
  </object>
  <object id="preCommitDeployHandler"
           type="Botwave.Workflow.Extension.Service.Plugins.PreCommitDeployHandler, Botwave.Workflow.Extension">
    <property name="workflowResourceService" ref="workflowResourceService"/>
  </object>
  
  <object id="postCommentHandler"
           type="Botwave.Workflow.Extension.Service.Plugins.PostCommentHandler, Botwave.Workflow.Extension" />

  <object id="userProxy"
           type="Botwave.Workflow.Extension.Service.Plugins.UserProxy, Botwave.Workflow.Extension" />

  <object id="resourceTranslator"
           type="Botwave.Workflow.Extension.Service.Plugins.ResourceTranslator, Botwave.Workflow.Extension" />

  <!-- extension plugins (end) -->

  <!-- extension service (begin) -->
  <object id="workflowSearcher"
           type="Botwave.Workflow.Extension.Service.Support.DefaultWorkflowSearcher, Botwave.Workflow.Extension" />

  <object id="workflowUserService"
           type="Botwave.Workflow.Extension.Service.Support.DefaultWorkflowUserService, Botwave.Workflow.Extension" />

  <object id="workflowResourceService"
           type="Botwave.Workflow.Extension.Service.Support.DefaultWorkflowResourceService, Botwave.Workflow.Extension" />

  <object id="emptyWorkflowFormService"
           type="Botwave.Workflow.Extension.Service.Support.EmptyWorkflowFormService, Botwave.Workflow.Extension" />

  <object id="emptyWorkflowFieldService"
           type="Botwave.Workflow.Extension.Service.Support.EmptyWorkflowFieldService, Botwave.Workflow.Extension" />

  <object id="emptyWorkflowNotifyService"
           type="Botwave.Workflow.Extension.Service.Support.EmptyWorkflowNotifyService, Botwave.Workflow.Extension" />

  <object id="emptyWorkflowFileService"
           type="Botwave.Workflow.Extension.Service.Support.EmptyWorkflowFileService, Botwave.Workflow.Extension" />

  <object id="emptyWorkflowAttachmentService"
           type="Botwave.Workflow.Extension.Service.Support.EmptyWorkflowAttachmentService, Botwave.Workflow.Extension" />

  <object id="activityExecutionContextHandler"
           type="Botwave.Workflow.Extension.Service.Plugins.ActivityExecutionContextHandler, Botwave.Workflow.Extension" />
  
  <!-- extension service (end) -->
  
  <!-- extension ui service (begin) -->  
  <object id="workflowSelectorFactory"
            type="Botwave.Workflow.Extension.UI.Support.DefaultWorkflowSelectorFactory, Botwave.Workflow.Extension">
    <property name="Profiles">
      <dictionary>
        <entry key="default" value-ref="defaultWorkflowSelectorProfile"/>
        <entry key="czmccProfile" value-ref="czmccWorkflowSelectorProfile"/>
        <entry key="czmccXSJYProfile" value-ref="czmccXSJYWorkflowSelectorProfile"/>
      </dictionary>
    </property>
  </object>

  <!--<object id="workflowUIProfile"
           type="Botwave.Workflow.Extension.UI.Support.EmptyWorkflowUIProfile, Botwave.Workflow.Extension" />-->

  <object id="workflowUIProfile"
           type="Botwave.XQP.Service.Plugins.WorkflowUIProfile, Botwave.XQP" />

  <!--<object id="defaultWorkflowSelectorProfile"
           type="Botwave.Workflow.Extension.UI.Support.DefaultWorkflowSelectorProfile, Botwave.Workflow.Extension">
    <property name="activityAllocationService" ref="activityAllocationService"/>
    <property name="workflowUserService" ref="workflowUserService"/>
  </object>-->
  
  <object id="defaultWorkflowSelectorProfile"
           type="Botwave.XQP.Service.Support.ExtendWorkflowSelectorProfile, Botwave.XQP">
    <property name="activityAllocationService" ref="activityAllocationService"/>
    <property name="workflowUserService" ref="workflowUserService"/>
  </object>
  
  <!--<object id="czmccWorkflowSelectorProfile"
           type="Botwave.Workflow.Practices.CZMCC.Support.WorkflowSelectorProfile, Botwave.Workflow.Practices">
    <property name="activityAllocationService" ref="activityAllocationService"/>
    <property name="workflowUserService" ref="workflowUserService"/>
    <property name="Activities">
          <list element-type="string"> 
              <value>提交下一步处理人</value>
          </list>
      </property>
  </object>-->
  
  <object id="czmccWorkflowSelectorProfile"
           type="Botwave.Workflow.Practices.CZMCC.Support.ExtendWorkflowSelectorProfile, Botwave.Workflow.Practices">
    <property name="activityAllocationService" ref="activityAllocationService"/>
    <property name="workflowUserService" ref="workflowUserService"/>
    <property name="Activities">
      <list element-type="string">
        <value>提交下一步处理人</value>
      </list>
    </property>
  </object>
  
  <!--<object id="czmccXSJYWorkflowSelectorProfile"
           type="Botwave.Workflow.Practices.CZMCC.Support.XSJYWorkflowSelectorProfile, Botwave.Workflow.Practices">
    <property name="activityAllocationService" ref="activityAllocationService"/>
    <property name="workflowUserService" ref="workflowUserService"/>
    <property name="ProfileActivityName" value="内部处理环节"/>
  </object>-->
  
  <object id="czmccXSJYWorkflowSelectorProfile"
           type="Botwave.Workflow.Practices.CZMCC.Support.ExtendXSJYWorkflowSelectorProfile, Botwave.Workflow.Practices">
    <property name="activityAllocationService" ref="activityAllocationService"/>
    <property name="workflowUserService" ref="workflowUserService"/>
    <property name="ProfileActivityName" value="内部处理环节"/>
  </object>
  <!-- extension ui service (end) -->
  
  <!-- extension workflow form (begin)-->
  <object id="workflowFormService"
           type="Botwave.Workflow.Extension.Service.Support.DefaultWorkflowFormService, Botwave.Workflow.Extension">
    <property name="formDefinitionService" ref="formDefinitionService"/>
    <property name="formInstanceService" ref="formInstanceService"/>
    <property name="formItemDataBinder" ref="formItemDataBinder"/>
  </object>

  <object id="formDefinitionService"
           type="Botwave.DynamicForm.IBatisNet.FormDefinitionService, Botwave.DynamicForm.IBatisNet" />

  <object id="formInstanceService"
           type="Botwave.DynamicForm.IBatisNet.FormInstanceService, Botwave.DynamicForm.IBatisNet">
    <property name="formDefinitionService" ref="formDefinitionService"/>
    <property name="uploadFileHandler" ref="uploadFileHandler"/>
  </object>
  
  <object id="formItemDataBinder"
      type="Botwave.DynamicForm.Binders.DefaultFormItemDataBinder, Botwave.DynamicForm" >
    <property name="formInstanceService" ref="formInstanceService"/>
  </object>

  <!--<object id="formItemDataBinder"
      type="Botwave.DynamicForm.Extension.Binders.DefaultFormItemDataBinder, Botwave.DynamicForm.Extension" >
    <property name="formInstanceService" ref="formInstanceService"/>
  </object>-->
  
  <object id="emptyUploadFileHandler"
           type="Botwave.DynamicForm.Plugin.EmptyUploadFileHandler, Botwave.DynamicForm" />
  
  <object id="uploadFileHandler"
           type="Botwave.XQP.Service.Plugins.UploadFileHandler, Botwave.XQP" />

  <!-- extension workflow form (end)-->
  
  <!-- xqp2 (begin) -->

  <object id="workflowNotifyExtendService"
           type="Botwave.XQP.Service.Support.WorkflowNotifyExtendService, Botwave.XQP" />

  <object id="xqpFieldTaskAllocator"
        type="Botwave.XQP.Service.Plugins.FieldTaskAllocator, Botwave.XQP" />

  <object id="xqpWorkflowFieldService"
           type="Botwave.XQP.Service.Plugins.WorkflowFieldService, Botwave.XQP" />

  <object id="xqpPostCloseParallelActivityInstancesHandler"
           type="Botwave.XQP.Service.Plugins.PostCloseParallelActivityInstancesHandler, Botwave.XQP" />
  
  <object id="superiorTaskAllocator"
        type="Botwave.XQP.Service.Plugins.SuperiorTaskAllocator, Botwave.XQP">
    <property name="spName" value="bwwf_cz_GetAuditUsersByOrg"/>
  </object>
  <!--<object id="workflowInstanceCreationController"
           type="Botwave.Workflow.Extension.Service.Plugins.WorkflowInstanceCreationController, Botwave.Workflow.Extension" />  -->
  <object id="workflowInstanceCreationController"
           type="Botwave.XQP.Service.Plugins.WorkflowInstanceCreationController, Botwave.XQP" />

  <object id="xqpPostActivityExecutionHandler"
           type="Botwave.XQP.Service.Plugins.PostActivityExecutionHandler, Botwave.XQP">
    <property name="activityService" ref="activityService"/>
    <property name="workflowService" ref="workflowService"/>
    <property name="userService" ref="userService"/>
    <property name="workflowNotifyExtendService" ref="workflowNotifyExtendService"/>
  </object>

  <object id="xqpPostAssignHandler"
           type="Botwave.XQP.Service.Plugins.PostAssignHandler, Botwave.XQP">
    <property name="userService" ref="userService"/>
  </object>

  <!--<object id="userProxyNotifier"
           type="Botwave.Workflow.Extension.Service.Plugins.UserProxyNotifier, Botwave.Workflow.Extension" />-->
  <object id="userProxyNotifier"
           type="Botwave.XQP.Service.Plugins.UserProxyNotifier, Botwave.XQP">
    <property name="userService" ref="userService"/>
  </object>

  <!--<object id="xqpPostDeployHandler"
           type="Botwave.XQP.Service.Plugins.PostDeployHandler, Botwave.XQP" />-->

  <object id="xqpPostCancelWorkflowHandler"
           type="Botwave.XQP.Service.Plugins.PostCancelWorkflowHandler, Botwave.XQP" />

  <!--<object id="workflowNotifyService"
           type="Botwave.Workflow.Extension.Service.Support.DefaultWorkflowNotifyService, Botwave.Workflow.Extension" />-->
  
  <!--<object id="workflowNotifyService"
           type="Botwave.XQP.Service.Plugins.WorkflowNotifyService, Botwave.XQP">
    <property name="activityService" ref="activityService"/>
    <property name="workflowUserService" ref="workflowUserService"/>
    <property name="workflowNotifyExtendService" ref="workflowNotifyExtendService"/>
    <property name="messageSender" ref="messageSender"/>
  </object>-->

  <object id="XqpSystemPostHandler"
               type="Botwave.XQP.Service.Plugins.XqpSystemPostHandler, Botwave.XQP" >
    <property name="activityService" ref="activityService"/>
    <property name="workflowService" ref="workflowService"/>
    <property name="userService" ref="userService"/>
    <property name="workflowNotifyExtendService" ref="workflowNotifyExtendService"/>
	  <property name="WorkflowAPIServices" ref="WorkflowAPIServices"/>
    <property name="next" ref="xqpPostActivityExecutionHandler" />
  </object>

  <object id="workflowNotifyService"
           type="Botwave.Workflow.Practices.CZMCC.Support.WorkflowNotifyService, Botwave.Workflow.Practices">
    <property name="activityService" ref="activityService"/>
    <property name="workflowUserService" ref="workflowUserService"/>
    <property name="workflowNotifyExtendService" ref="workflowNotifyExtendService"/>
    <property name="messageSender" ref="czmccMessageSender"/>
  </object>
  
  <object id="xqpWorkflowFileService"
         type="Botwave.XQP.Service.Plugins.WorkflowFileService, Botwave.XQP" />

  <object id="xqpWorkflowAttachmentService"
         type="Botwave.XQP.Service.Plugins.WorkflowAttachmentService, Botwave.XQP" />

  <object id="xqpPostCompleteWorkflowHandler"
           type="Botwave.XQP.Service.Plugins.PostCompleteWorkflowHandler, Botwave.XQP">
    <property name="workflowService" ref="workflowService"/>
    <property name="workflowDefinitionService" ref="workflowDefinitionService"/>
    <property name="workflowUserService" ref="workflowUserService"/>
  </object>
  <!-- oa (begin) -->

  <object id="BatisActivityExecutionService"
          type="Botwave.Workflow.Practices.BWOA.Service.Impl.IBatisActivityExecutionService, Botwave.Workflow.Practices" />

  <object id="WfPostOADataHandler"
          type="Botwave.Workflow.Practices.BWOA.WfPlugin.WfPostOADataHandler, Botwave.Workflow.Practices">
    <property name="activityService" ref="ActivityService"/>
    <property name="workflowService" ref="WorkflowService"/>
    <property name="batisActivityExecutionService" ref="BatisActivityExecutionService"/>
    <property name="activityDefinitionService" ref="ActivityDefinitionService"/>
    <!--<property name="WorkflowReminderService" ref="WorkflowReminderService"/>-->
    <property name="FormInstanceService" ref="FormInstanceService"/>
    <property name="WorkflowDefinitionService" ref="WorkflowDefinitionService"/>
    <property name="userService" ref="UserService"/>
    <property name="workflowNotifyService" ref="workflowNotifyService"/>
    <property name="next" ref="xqpPostActivityExecutionHandler" />
  </object>
  

  <object id="expenseTaskAllocator"
          type="Botwave.Workflow.Practices.BWOA.WfPlugin.ExpenseTaskAllocator, Botwave.Workflow.Practices">
    <property name="formInstanceService" ref="FormInstanceService"/>
  </object>
  
  <object id="messageSender"
           type="Botwave.Workflow.Practices.GZMCC.MessageSender, Botwave.Workflow.Practices" />

  <object id="czmccMessageSender"
           type="Botwave.Workflow.Practices.CZMCC.MessageSender, Botwave.Workflow.Practices" />

  <object id="notifyReaderService"
           type="Botwave.Workflow.Practices.CZMCC.Support.NotifyReaderService, Botwave.Workflow.Practices">
    <property name="workflowUserService" ref="workflowUserService"/>
  </object>

  <object id="authenticator"
        type="Botwave.XQP.Service.WS.Authenticator, Botwave.XQP"/>

  <object id="timerAuthenticator"
        type="Botwave.XQP.Service.WS.TimerAuthenticator, Botwave.XQP"/>
  
  <object id="workflowCooperation"
            type="Botwave.XQP.Service.WS.WorkflowCooperationService, Botwave.XQP" >
    <property name="authenticator" ref="timerAuthenticator"/>
    <property name="activityService" ref="activityService"/>
    <property name="formInstanceService" ref="formInstanceService"/>
    <property name="workflowEngine" ref="workflowEngine"/>
    <property name="taskAssignService" ref="taskAssignService"/>
    <property name="workflowService" ref="workflowService"/>
    <property name="activityDefinitionService" ref="activityDefinitionService"/>
    <property name="formDefinitionService" ref="formDefinitionService"/>
    <property name="workflowNotifyService" ref="workflowNotifyService"/>
    <property name="postActivityExecutionMessageHandler" ref="postActivityExecutionMessageHandler"/>
  </object>

  <object id="specialCycleActivityExecutionHandler"
        type="Botwave.XQP.Service.Plugins.SpecialCycleActivityExecutionHandler, Botwave.XQP">
    <property name="activityExecutionHandlerManager" ref="activityExecutionHandlerManager"/>
    <property name="decisionParserManager" ref="decisionParserManager"/>
    <property name="activityDefinitionService" ref="activityDefinitionService"/>
    <property name="activityService" ref="activityService"/>
    <property name="workflowDefinitionService" ref="workflowDefinitionService"/>
    <property name="workflowService" ref="workflowService"/>
    <property name="postActivityExecutionHandler" ref="postActivityExecutionHandler"/>
    <property name="postCancelWorkflowHandler" ref="postCancelWorkflowHandler"/>
    <property name="postCompleteWorkflowHandler" ref="postCompleteWorkflowHandler"/>
    <property name="preDeleteWorkflowHandler" ref="preDeleteWorkflowHandler"/>
    <property name="commandRulesParser" ref="commandRulesParser"/>
    <property name="joinConditionParser" ref="joinConditionParser"/>
    <property name="activityAllocationService" ref="activityAllocationService"/>
    <!--<property name="postCloseParallelActivityInstancesHandler" ref="postCloseParallelActivityInstancesHandler"/>-->
    <property name="postCloseParallelActivityInstancesHandler" ref="xqpPostCloseParallelActivityInstancesHandler"/>
    <property name="userProxy" ref="userProxy"/>
    <property name="userProxyNotifier" ref="userProxyNotifier"/>
    <property name="countersignedService" ref="countersignedService"/>
    <property name="countersignedConditionParser" ref="splitConditionParser"/>
    <property name="joinConditionHandlerManager" ref="joinConditionHandlerManager"/>
  </object>
  
  <object id="postActivityExecutionMessageHandler"
            type="Botwave.XQP.Service.Plugins.PostActivityExecutionMessageHandler, Botwave.XQP" >
    <property name="workflowService" ref="workflowService"/>
    <property name="workflowSettingService" ref="workflowSettingService"/>
    <property name="workflowNotifyService" ref="workflowNotifyService"/>
    <property name="workflowUserService" ref="workflowUserService"/>
  </object>

  <object id="workflowReviewService"
            type="Botwave.XQP.Service.Support.WorkflowReviewService, Botwave.XQP" >
    <property name="activityDefinitionService" ref="activityDefinitionService"/>
    <property name="activityService" ref="activityService"/>
  </object>

  <object id="defaultReviewSelectorProfile"
            type="Botwave.XQP.Service.Support.DefaultReviewSelectorProfile, Botwave.XQP" >
  </object>
  
  <object id="checkReviewSelectorProfile"
            type="Botwave.XQP.Service.Support.CheckReviewSelectorProfile, Botwave.XQP" >
  </object>
  
  <object id="reviewPending"
            type="Botwave.XQP.Service.Support.ReviewPending, Botwave.XQP">
    <property name="activityDefinitionService" ref="activityDefinitionService"/>
    <property name="activityService" ref="activityService"/>
  </object>

  <!--FormExtension-->
  <object id="getDataService"
            type="Botwave.DynamicForm.Extension.Contracts.GetDataService, Botwave.DynamicForm.Extension" >
  </object>

  <object id="getOuterDataHandler"
            type="Botwave.DynamicForm.Extension.Commons.GetOuterDataHandler, Botwave.DynamicForm.Extension" >
    <property name="formDefinitionService" ref="formDefinitionService"/>
    <property name="getDataService" ref="getDataService"/>
  </object>

  <object id="jsLibraryService"
            type="Botwave.DynamicForm.Extension.Contracts.JsLibraryService, Botwave.DynamicForm.Extension" >
  </object>

  <object id="FormItemIFramesService"
            type="Botwave.DynamicForm.Extension.Contracts.FormItemIFramesService, Botwave.DynamicForm.Extension" >
  </object>

  <object id="itemDataListSettingService"
            type="Botwave.DynamicForm.Extension.Contracts.ItemDataListService, Botwave.DynamicForm.Extension" >
  </object>

  <object id="dataListDefinitionService"
            type="Botwave.DynamicForm.Extension.Contracts.DataListDefinitionService, Botwave.DynamicForm.Extension" >
  </object>

  <object id="dataListInstanceService"
            type="Botwave.DynamicForm.Extension.Contracts.DataListInstanceService, Botwave.DynamicForm.Extension" >
    <property name="formDefinitionService" ref="formDefinitionService"/>
    <property name="dataListDefinitionService" ref="dataListDefinitionService"/>
    <property name="itemDataListSettingService" ref="itemDataListSettingService"/>
  </object>
  <!--FormExtension end-->
  
  <!--WorkflowAPIWS-->
  <object id="WorkflowAPIServices"
           type="Botwave.XQP.API.Interface.WorkflowAPIService, Botwave.XQP" >
    <property name="SearchAPIService" ref="SearchAPIService"/>
    <property name="ManageAPIService" ref="ManageAPIService"/>
    <property name="LoginAPIService" ref="LoginAPIService"/>
    <property name="SaveAsAPIService" ref="SaveAsAPIService"/>
  </object>

  <object id="LoginAPIService"
         type="Botwave.XQP.API.Service.LoginAPIService, Botwave.XQP" >
  </object>

  <object id="SearchAPIService"
          type="Botwave.XQP.API.Service.SearchAPIService, Botwave.XQP" >
    <property name="ActivityService" ref="ActivityService"/>
    <property name="WorkflowPagerService" ref="WorkflowPagerService"/>
    <property name="ActivityDefinitionService" ref="ActivityDefinitionService"/>
    <property name="ActivityAllocationService" ref="ActivityAllocationService"/>
    <property name="WorkflowDefinitionService" ref="WorkflowDefinitionService"/>
    <property name="workflowSearcher" ref="workflowSearcher"/>
    <property name="CommentService" ref="CommentService"/>
    <property name="activityRulesService" ref="activityRulesService"/>
    <property name="workflowService" ref="workflowService"/>
  </object>

  <object id="ManageAPIService"
          type="Botwave.XQP.API.Service.ManageAPIService, Botwave.XQP" >
    <property name="commentService" ref="commentService"/>
    <property name="activityService" ref="activityService"/>
    <property name="taskAssignService" ref="taskAssignService"/>
    <property name="userService" ref="userService"/>
    <property name="workflowService" ref="workflowService"/>
    <property name="workflowEngine" ref="workflowEngine"/>
    <property name="activityDefinitionService" ref="activityDefinitionService"/>
    <property name="formInstanceService" ref="formInstanceService"/>
    <property name="activityAllocationService" ref="activityAllocationService"/>
    <property name="workflowInstanceCreationController" ref="workflowInstanceCreationController"/>
    <property name="workflowUserService" ref="workflowUserService"/>
    <property name="workflowNotifyService" ref="workflowNotifyService"/>

  </object>

  <object id="SaveAsAPIService"
           type="Botwave.XQP.API.Service.SaveAsAPIService, Botwave.XQP" >
  </object>

  <object id="workflowRoleService"
           type="Botwave.XQP.Service.Support.WorkflowRoleService, Botwave.XQP" >
    <property name="resourceService" ref="resourceService"/>
    <property name="roleService" ref="roleService"/>
  </object>

  <object id="roleTaskAllocator"
          type="Botwave.XQP.Service.Plugins.RoleTaskAllocator, Botwave.XQP" >
    <property name="workflowRoleService" ref="workflowRoleService"/>
  </object>

  <!--<object id="advancedSearcher"
           type="Botwave.XQP.API.Service.AdvancedSearcher, Botwave.XQP" >
  </object>-->
  <!--WorkflowAPIWS End-->

  <object id="activityTaskAllocator"
           type="Botwave.XQP.Service.Plugins.WorkflowActivityTaskAllocator, Botwave.XQP" >
  </object>

  <object id="customizeTaskAllocator"
           type="Botwave.XQP.Service.Plugins.CustomizeTaskAllocator, Botwave.XQP" >
  </object>
  <!--WorkflowMaintenanceService-->
  <object id="workflowMaintenanceService"
           type="Botwave.XQP.Service.Support.WorkflowMaintenanceService, Botwave.XQP" >
    <property name="activityService" ref="activityService"/>
    <property name="taskAssignService" ref="taskAssignService"/>
    <property name="countersignedService" ref="countersignedService"/>
  </object>
  <!--WorkflowMaintenanceService end-->
  
  <!--mobile begin-->

  <object id="mobileFormService"
           type="Botwave.DynamicForm.Extension.Contracts.Support.DefaultWorkflowFormService, Botwave.DynamicForm.Extension">
    <property name="formDefinitionService" ref="formDefinitionService"/>
    <property name="formInstanceService" ref="formInstanceService"/>
    <property name="formItemDataBinder" ref="formItemDataBinder"/>
  </object>
  <object id="mobileWorkflowSearcher"
           type="Botwave.XQP.Service.Support.MobileWorkflowSearcher, Botwave.XQP" />
  <object id="workflowMobileService"
           type="Botwave.XQP.Service.Support.WorkflowMobileService, Botwave.XQP" />
  <!--mobile end-->

  <object id="XqpJoinConditionHandler"
            type="Botwave.XQP.Service.Plugin.XqpJoinConditionHandler, Botwave.XQP" >
  </object>

  <object id="extendActivityService"
          type="Botwave.XQP.Service.Support.ExtendAvtivityService, Botwave.XQP">
  </object>

  <object id="activityRulesService"
           type="Botwave.Workflow.Routing.Contracts.ActivityRulesService, Botwave.Workflow.Routing" >
    <property name="workflowUserService" ref="workflowUserService"/>
    <property name="workflowService" ref="workflowService"/>
    <property name="userService" ref="userService"/>
    <property name="formInstanceService" ref="formInstanceService"/>
  </object>
  <object id="activityRulesHelper"
           type="Botwave.Workflow.Routing.Commons.ActivityRulesHelper, Botwave.Workflow.Routing" >
  </object>
</objects>

