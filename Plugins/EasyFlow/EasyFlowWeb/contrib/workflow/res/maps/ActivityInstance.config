<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="ActivityInstanceSpace" xmlns="http://ibatis.apache.org/mapping"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <alias>
    <typeAlias alias="ActivityInstance" type="Botwave.Workflow.Domain.ActivityInstance, Botwave.Workflow.Core" />
    <typeAlias alias="ActivityExecutionContext" type="Botwave.Workflow.ActivityExecutionContext, Botwave.Workflow.Core" />
    <typeAlias alias="dataset" type="System.Data.DataSet" />
  </alias>

  <cacheModels>
    <cacheModel id="activityInstance-cache" implementation="LRU" readOnly="true" serialize="false">
      <flushInterval hours="24"/>
      <property name="CacheSize" value="200"/>
    </cacheModel>
  </cacheModels>

  <resultMaps>
    <resultMap id="ActivityInstanceResult" class="ActivityInstance">
      <result property="ActivityInstanceId" column="ActivityInstanceId"/>
      <result property="PrevSetId" column="PrevSetId"/>
      <result property="WorkflowInstanceId" column="WorkflowInstanceId"/>
      <result property="ActivityId" column="ActivityId"/>
      <result property="IsCompleted" column="IsCompleted" />
      <result property="OperateType" column="OperateType" />
      <result property="CreatedTime" column="CreatedTime"/>
      <result property="FinishedTime" column="FinishedTime"/>
      <result property="Actor" column="Actor"/>
      <result property="Command" column="Command" />
      <result property="Reason" column="Reason"/>
      <result property="ExternalEntityType" column="ExternalEntityType"/>
      <result property="ExternalEntityId" column="ExternalEntityId"/>
      <result property="ActorDescription" column="ActorDescription"/>
    </resultMap>

    <resultMap id="ActivityInstanceResult2" class="ActivityInstance">
      <result property="ActivityInstanceId" column="ActivityInstanceId"/>
      <result property="PrevSetId" column="PrevSetId"/>
      <result property="WorkflowInstanceId" column="WorkflowInstanceId"/>
      <result property="ActivityId" column="ActivityId"/>
      <result property="IsCompleted" column="IsCompleted" />
      <result property="OperateType" column="OperateType"/>
      <result property="CreatedTime" column="CreatedTime"/>
      <result property="FinishedTime" column="FinishedTime"/>
      <result property="Actor" column="Actor"/>
      <result property="Command" column="Command" />
      <result property="Reason" column="Reason"/>
      <result property="ExternalEntityType" column="ExternalEntityType"/>
      <result property="ExternalEntityId" column="ExternalEntityId"/>
      <result property="ActorDescription" column="ActorDescription"/>

      <result property="ActivityName" column="ActivityName"/>
      <result property="WorkItemTitle" column="WorkItemTitle"/>
      <result property="CountersignedCondition" column="CountersignedCondition"/>
    </resultMap>
  </resultMaps>

  <statements>
    <insert id="bwwf_ActivityInstance_Insert" parameterClass="ActivityInstance">
      insert into bwwf_Tracking_Activities
      (ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime,Actor,ExternalEntityType,ExternalEntityId, ActorDescription)
      values
      (#ActivityInstanceId#,#PrevSetId#,#WorkflowInstanceId#,#ActivityId#,#IsCompleted#,#OperateType#,getdate(),#Actor#,#ExternalEntityType#,#ExternalEntityId#, #ActorDescription#)
    </insert>

    <insert id="bwwf_ActivityInstance_Completed_Insert" parameterClass="ActivityInstance">
      update bwwf_Tracking_Todo set State = 2 where (ActivityInstanceId = #ActivityInstanceId# and UserName = #Actor#);
      INSERT INTO bwwf_Tracking_Activities_Completed
      (ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime, FinishedTime, Actor,Command, Reason, ExternalEntityType,ExternalEntityId, ActorDescription)
      VALUES
      (#ActivityInstanceId#,#PrevSetId#,#WorkflowInstanceId#,#ActivityId#,1,#OperateType#,#CreatedTime#,getdate(), #Actor#,#Command#, #Reason#, #ExternalEntityType#,#ExternalEntityId#, #ActorDescription#)
    </insert>

    <update id="bwwf_ActivityInstance_Completed_update" parameterClass="guid">
      update bwwf_Tracking_Todo set State = 2 where ActivityInstanceId = #ActivityInstanceId# ;
    </update>

    <insert id="bwwf_ActivityInstance_Completed_InsertOne" parameterClass="ActivityInstance">
      INSERT INTO bwwf_Tracking_Activities_Completed
      (ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime, FinishedTime, Actor,Command, Reason, ExternalEntityType,ExternalEntityId, ActorDescription)
      VALUES
      (#ActivityInstanceId#,#PrevSetId#,#WorkflowInstanceId#,#ActivityId#,1,#OperateType#,#CreatedTime#,getdate(), #Actor#,#Command#, #Reason#, #ExternalEntityType#,#ExternalEntityId#, #ActorDescription#)
    </insert>

    <insert id="bwwf_ActivityInstance_Completed_DirectInsert" parameterClass="ActivityInstance">
      update bwwf_Tracking_Todo set State = 2 where ActivityInstanceId = #ActivityInstanceId# and UserName = #Actor#;
      INSERT INTO bwwf_Tracking_Activities_Completed
      (ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime, FinishedTime, Actor,Command, Reason, ExternalEntityType,ExternalEntityId,ActorDescription)
      VALUES
      (#ActivityInstanceId#,#PrevSetId#,#WorkflowInstanceId#,#ActivityId#,1,#OperateType#,getdate(),getdate(), #Actor#,#Command#, #Reason#, #ExternalEntityType#,#ExternalEntityId#,#ActorDescription#)
    </insert>

    <delete id="bwwf_ActivityInstance_Delete" parameterClass="guid">
      DELETE FROM bwwf_Tracking_Activities WHERE ActivityInstanceId = #value#
    </delete>

    <update id="bwwf_ActivityInstance_Complete" parameterClass="ActivityInstance">
      update bwwf_Tracking_Activities set
      IsCompleted = 1,FinishedTime=getdate(),Command=#Command#,Actor=#Actor#,Reason=#Reason#,ActorDescription=#ActorDescription#
      where ActivityInstanceId=#ActivityInstanceId#
    </update>

    <update id="bwwf_ActivityInstance_Update" parameterClass="ActivityInstance">
      update bwwf_Tracking_Activities set
      Command=#Command#,Reason=#Reason#,ExternalEntityType=#ExternalEntityType#,ExternalEntityId=#ExternalEntityId#
      where ActivityInstanceId=#ActivityInstanceId#
    </update>

    <update id="bwwf_ActivityInstance_CloseAllActivitiesOfWorkflowInstance" parameterClass="ActivityExecutionContext">
      <![CDATA[
      update bwwf_Tracking_Activities set
      Command='close_activities',Actor=#Actor#,IsCompleted=1,FinishedTime=getdate(), ActorDescription=#ActorDescription#
      where IsCompleted=0 and WorkflowInstanceId=(
          select top 1 WorkflowInstanceId from vw_bwwf_Tracking_Activities_All
          where ActivityInstanceId=#ActivityInstanceId#
      )
      ]]>
    </update>

    <select id="bwwf_ActivityInstance_Load_By_Id" resultMap="ActivityInstanceResult2" parameterClass="guid">
      <![CDATA[
      select ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime,
          FinishedTime,Actor,Command,Reason,ExternalEntityType,ExternalEntityId, ActorDescription,
          ActivityName, WorkItemTitle, CountersignedCondition
      from vw_bwwf_Tracking_Activities_All_Ext
      where ActivityInstanceId=#value#
      ]]>
    </select>

    <select id="bwwf_ActivityInstance_Select" resultMap="ActivityInstanceResult" parameterClass="guid">
      select ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime,
      FinishedTime,Actor,Command,Reason,ExternalEntityType,ExternalEntityId, ActorDescription
      from vw_bwwf_Tracking_Activities_All
      <dynamic prepend="where">
        <isParameterPresent>
          WorkflowInstanceId=(select top 1 WorkflowInstanceId from vw_bwwf_Tracking_Activities_All where ActivityInstanceId=#value#)
        </isParameterPresent>
      </dynamic>
      order by CreatedTime desc
    </select>

    <select id="bwwf_ActivityInstance_Select_UnCompleted_By_AIId" resultMap="ActivityInstanceResult" parameterClass="guid">
      <![CDATA[
      SELECT ActivityInstanceId, PrevSetId, WorkflowInstanceId, ActivityId, IsCompleted, Actor,
          OperateType, CreatedTime, FinishedTime, Command, Reason, ExternalEntityType, ExternalEntityId, ActorDescription
      FROM bwwf_Tracking_Activities
      WHERE WorkflowInstanceId = (
          SELECT top 1 WorkflowInstanceId FROM vw_bwwf_Tracking_Activities_All WHERE ActivityInstanceId = #value#
      )
      ORDER BY CreatedTime
      ]]>
    </select>

    <select id="bwwf_ActivityInstance_Select_Completed_By_Workflow" resultMap="ActivityInstanceResult2" parameterClass="guid">
      <![CDATA[
      SELECT ta.ActivityInstanceId, ta.PrevSetId, ta.WorkflowInstanceId, ta.ActivityId, ta.IsCompleted, ta.OperateType, 
          ta.CreatedTime, ta.FinishedTime, ta.Command, ta.Reason, ta.ExternalEntityType, ta.ExternalEntityId, ta.ActorDescription, 
          tw.Title AS WorkItemTitle, a.ActivityName, a.CountersignedCondition,
          ta.Actor + '/' + u.RealName AS Actor
    FROM bwwf_Tracking_Activities_Completed ta 
          LEFT JOIN bwwf_Tracking_Workflows tw ON ta.WorkflowInstanceId = tw.WorkflowInstanceId 
          LEFT JOIN bwwf_Activities a ON ta.ActivityId = a.ActivityId 
          LEFT JOIN bw_Users u ON u.UserName = ta.Actor
      WHERE (ta.WorkflowInstanceId = #value#) and (ta.IsCompleted=1)
      ORDER BY ta.CreatedTime
      ]]>
    </select>

    <select id="bwwf_ActivityInstance_Select_Completed_By_WfIId_AId" resultMap="ActivityInstanceResult" parameterClass="Hashtable">
      <![CDATA[
      SELECT  ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime,
          FinishedTime,Actor,Command,Reason,ExternalEntityType,ExternalEntityId, ActorDescription
      FROM vw_bwwf_Tracking_Activities_All
      WHERE (IsCompleted = 1) AND (WorkflowInstanceId = #WorkflowInstanceId#) AND ActivityId = #ActivityId#
      ORDER BY CreatedTime DESC
      ]]>
    </select>

    <select id="bwwf_ActivityInstance_Select_PrevActivities_By_WFId_AId" resultMap="ActivityInstanceResult" parameterClass="Hashtable">
      <![CDATA[
      SELECT  ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime,
          FinishedTime,Actor,Command,Reason,ExternalEntityType,ExternalEntityId, ActorDescription
      FROM vw_bwwf_Tracking_Activities_All
      WHERE WorkflowInstanceId = #WorkflowInstanceId#
          AND ActivityId IN(
              SELECT BAS1.ActivityId FROM bwwf_ActivitySet BAS1
              WHERE BAS1.SetId =(
                  SELECT BA1.PrevActivitySetId FROM bwwf_Activities BA1
                  WHERE BA1.ActivityId = #ActivityId#
            )
        )
      ]]>
    </select>

    <select id="bwwf_ActivityInstance_Select_NextActivities" resultMap="ActivityInstanceResult2" parameterClass="guid">
      <![CDATA[
      select ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime,
          FinishedTime,Actor,Command,Reason,ExternalEntityType,ExternalEntityId, ActorDescription,
          ActivityName,WorkItemTitle,CountersignedCondition
      from vw_bwwf_Tracking_Activities_All_Ext
      where PrevSetId IN (
          select SetId From bwwf_Tracking_Activities_Set where ActivityInstanceId =#value#
      )
      ]]>
    </select>
    <select id="bwwf_ActivityInstance_Select_CurrentActivity_ByWorkflowInstanceId" resultMap="ActivityInstanceResult2" parameterClass="guid">
      <![CDATA[
      SELECT ActivityInstanceId,PrevSetId,WorkflowInstanceId,ta.ActivityId,IsCompleted,OperateType,CreatedTime,
            FinishedTime,Actor,Command,Reason,CountersignedCondition,ExternalEntityType,ExternalEntityId, ActorDescription, 
            ActivityName, WorkItemTitle
      FROM vw_bwwf_Tracking_Activities_All_Ext ta
      WHERE WorkflowInstanceId = #value#
      ORDER BY CreatedTime DESC, FinishedTime DESC
      ]]>
    </select>

    <select id="bwwf_ActivityInstance_Select_CurrentActivities" resultMap="ActivityInstanceResult" parameterClass="guid">
      <![CDATA[
           SELECT ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime,
                FinishedTime,Actor,Command,Reason,ExternalEntityType,ExternalEntityId, ActorDescription
            FROM vw_bwwf_Tracking_Activities_All
            WHERE ActivityInstanceId IN(
              (
				          SELECT (
	                        SELECT TOP 1 ActivityInstanceId FROM vw_bwwf_Tracking_Activities_All
	                        WHERE WorkflowInstanceId = #value# AND (NOT EXISTS(
                                    SELECT ActivityInstanceId FROM vw_bwwf_Tracking_Activities_All
                                    WHERE IsCompleted = 0 AND WorkflowInstanceId = #value#
                                   )  
                              ) ORDER BY CreatedTime desc
				            )
                )
                UNION ALL
                (
                    SELECT ActivityInstanceId FROM vw_bwwf_Tracking_Activities_All
                    WHERE IsCompleted = 0 AND WorkflowInstanceId = #value#
                )
)
            ]]>
    </select>

    <select id="bwwf_ActivityInstance_Select_WorkflowInstanceId" resultClass="ActivityInstance" parameterClass="guid">
      <![CDATA[
      select ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime,
          FinishedTime,Actor,Command,Reason,ExternalEntityType,ExternalEntityId, ActorDescription,
          ActivityName,WorkItemTitle, CountersignedCondition
      from vw_bwwf_Tracking_Activities_All_Ext
      where WorkflowInstanceId = #value#
      order by CreatedTime
      ]]>
    </select>

    <select id="bwwf_ActivityInstance_Select_ExternalEntity" resultMap="ActivityInstanceResult" parameterClass="Hashtable">
      select ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime,
      FinishedTime,Actor,Command,Reason,ExternalEntityType,ExternalEntityId, ActorDescription
      from vw_bwwf_Tracking_Activities_All
      where (ExternalEntityType=#ExternalEntityType# AND ExternalEntityId = #ExternalEntityId#)
      order by CreatedTime desc
    </select>

    <select id="bwwf_Get_Current_Activityid" resultClass="guid" parameterClass="guid">
      <![CDATA[
      SELECT bwta1.ActivityId
      FROM vw_bwwf_Tracking_Activities_All bwta1
            LEFT OUTER JOIN vw_bwwf_Tracking_Activities_All bwta2 
            INNER JOIN   bwwf_Tracking_Workflows bwtw 
            ON bwta2.WorkflowInstanceId = bwtw.WorkflowInstanceId
            ON bwta1.WorkflowInstanceId = bwta2.WorkflowInstanceId
      WHERE (bwta2.ActivityInstanceId = #value#) AND (bwta1.IsCompleted = 0)
      ]]>
    </select>

    <select id="bwwf_ActivityInstance_Select_Prev_By_SetId" resultMap="ActivityInstanceResult" parameterClass="guid">
      <![CDATA[
      select  ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime,FinishedTime,
          Actor, Command,Reason,ExternalEntityType,ExternalEntityId, ActorDescription
      from vw_bwwf_Tracking_Activities_All
      where ActivityInstanceId in (
          select ActivityInstanceId from bwwf_Tracking_Activities_Set where SetId = #value#
      )
      ]]>
    </select>

    <select id="bwwf_ActivityInstance_Select_ParellelActivityInstances" resultMap="ActivityInstanceResult" parameterClass="Hashtable">
      <![CDATA[
      select ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime,FinishedTime,
            Actor,Command,Reason,ExternalEntityType,ExternalEntityId, ActorDescription
      from vw_bwwf_Tracking_Activities_All
      where WorkflowInstanceId = #WorkflowInstanceId# and ActivityId in(
            select ActivityId from bwwf_ActivitySet where SetId = #SetId#
      )
      ]]>
    </select>

    <select id="bwwf_ActivityInstance_Select_Prev_By_ActivityId" resultMap="ActivityInstanceResult" parameterClass="Hashtable">
      <![CDATA[
      SELECT ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime,FinishedTime,
            Actor,Command,Reason,ExternalEntityType,ExternalEntityId, ActorDescription
      FROM vw_bwwf_Tracking_Activities_All
      WHERE (WorkflowInstanceId = #WorkflowInstanceId#)
           AND ActivityId IN(
	              SELECT ActivityId FROM bwwf_ActivitySet WHERE SetId = (
		                  SELECT PrevActivitySetId FROM bwwf_Activities 
		                  WHERE ActivityId = #ActivityId#
	              )
           )
      ]]>
    </select>

    <select id="bwwf_ActivityInstance_Select_By_ActivityName" resultMap="ActivityInstanceResult" parameterClass="Hashtable">
      <![CDATA[
      select ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime,FinishedTime,
            Actor,Command,Reason,ExternalEntityType,ExternalEntityId, ActorDescription
      from vw_bwwf_Tracking_Activities_All
      where  WorkflowInstanceId = #WorkflowInstanceId# and IsCompleted = 1
            and ActivityId = (
                    select ActivityId from bwwf_Activities where (WorkflowId = #WorkflowId# and ActivityName = #ActivityName#)
       )
      order by CreatedTime desc
      ]]>
    </select>

    <select id="bwwf_ActivityInstance_Select_Instances_Of_PrevDefinition_By_CurrentInstance" resultMap="ActivityInstanceResult" parameterClass="ActivityInstance">
      <![CDATA[
            SELECT ActivityInstanceId,PrevSetId,WorkflowInstanceId,ActivityId,IsCompleted,OperateType,CreatedTime,FinishedTime,
                 Actor,Command,Reason,ExternalEntityType,ExternalEntityId, ActorDescription
            FROM vw_bwwf_Tracking_Activities_All
            where (WorkflowInstanceId =  #WorkflowInstanceId#) and IsCompleted = 1 
                and ActivityId in (
                    select ActivityId from bwwf_ActivitySet where SetId = (
                        select PrevActivitySetId from bwwf_Activities 
                        where ActivityId =  #ActivityId#
                    )
            )
            order by CreatedTime desc
            ]]>
    </select>

    <insert id="bwwf_ActivityInstanceSet_Insert" parameterClass="Hashtable">
      insert into bwwf_Tracking_Activities_Set
      (SetId,ActivityInstanceId)
      values
      (#SetId#,#ActivityInstanceId#)
    </insert>

    <select id="bwwf_ActivityInstanceActors_Select_RealName_ByActor" resultClass="string" parameterClass="string">
      SELECT RealName FROM bw_Users WHERE (UserName = #value#)
    </select>
  </statements>
</sqlMap>
