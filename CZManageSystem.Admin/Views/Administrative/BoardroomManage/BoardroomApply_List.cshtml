@{
    ViewBag.Title = "会议室申请信息列表";
    Layout = "~/Views/Shared/_Content.cshtml";
}
@section Scripts{
    <script src="~/Content/app/datePicker.js"></script>
    <link href="~/Content/app/AngularJsMultiSelect/isteven-multi-select.css" rel="stylesheet" />
    <script src="~/Content/app/AngularJsMultiSelect/isteven-multi-select.js"></script>
    <script type="text/javascript">
        var app = angular.module('ListPage', ['tm.pagination', 'datePicker', 'isteven-multi-select']);
        //控制器
        app.controller('Controller', ['$scope', "$filter", 'BusinessService', '$timeout', function ($scope, $filter, BusinessService, $timeout) {
            $scope.stateList = [
                                    //{ text: "待提交", value: "0", ticked: false },
                                    { text: "待审核", value: "1", ticked: false },
                                    { text: "待评价", value: "2", ticked: false },
                                    { text: "完成", value: "3", ticked: false },
                                    { text: "撤销", value: "-1", ticked: false }
            ];
            $scope.stateSelected = [];
            $scope.roomSelected = [];

            $scope.queryBuilder = {
                AppTime_start: "",
                AppTime_end: "",
                State: null,
                isManager: true
            };

            //获取会议室资料信息
            BusinessService.GetBoardroomInfoListData_short().success(function (response) {
                $scope.BoardroomInfoList = response.items;
            }).error(function (err) {
                box.alert("网络出错！", { icon: 'error' });
            });

            $scope.resetComData = function () {
                if ($scope.BoardroomInfoList == undefined) {
                    $timeout(function () {
                        $scope.resetComData();
                    }, 100);
                }
                else {
                    $.each($scope.BoardroomInfoList, function (i, item) {
                        if (postData.queryBuilder.Room.indexOf(item.BoardroomID) > -1)
                            item.ticked = true;
                    })
                    $.each($scope.stateList, function (i, item) {
                        if (postData.queryBuilder.State.indexOf(item.value) > -1)
                            item.ticked = true;
                    })
                }
            }

            //获取列表
            var GetListData = function () {
                
                $scope.master = false;
                choseArr = [];

                //获取最近一次查询条件
                if (parent.getPageParam != undefined)
                    postData = parent.getPageParam('@Request.Path');//根据路径获取
                if (postData == null) {
                    postData = {
                        pageIndex: $scope.paginationConf.currentPage,
                        pageSize: $scope.paginationConf.itemsPerPage,
                        queryBuilder: $scope.queryBuilder
                    };
                    $scope.queryBuilder.State = [];
                    if ($scope.stateSelected.length > 0) {
                        $.each($scope.stateSelected, function (i, item) {
                            $scope.queryBuilder.State.push(item.value);
                        })
                    }

                    $scope.queryBuilder.Room = [];
                    if ($scope.roomSelected.length > 0) {
                        $.each($scope.roomSelected, function (i, item) {
                            $scope.queryBuilder.Room.push(item.BoardroomID);
                        })
                    }
                }
                else {
                    $scope.paginationConf.currentPage = postData.pageIndex;
                    $scope.paginationConf.itemsPerPage = postData.pageSize;
                    $scope.queryBuilder = postData.queryBuilder;
                    $scope.resetComData();
                }


                //box.load("GetListData");
                BusinessService.list(postData).success(function (response) {
                    //box.ready("GetListData");
                    $scope.paginationConf.totalItems = response.count;
                    $scope.ListPageData = response.items;
                }).error(function (err) {
                    //box.ready("GetListData");
                    box.alert("网络出错！", { icon: 'error' });
                });

            }
            //配置分页基本参数
            $scope.paginationConf = {
                currentPage: 1,
                itemsPerPage: 10
            };

            /***************************************************************
            当页码和页面记录数发生变化时监控后台查询
            如果把currentPage和itemsPerPage分开监控的话则会触发两次后台事件。
            ***************************************************************/
            $scope.$watch('paginationConf.currentPage + paginationConf.itemsPerPage', GetListData);

            /*实现全选，多选操作*/
            var choseArr = new Array();
            $scope.x = false;//默认未选中
            $scope.all = function ($event) {//全选
                var isChecked = $event.target.checked;
                angular.element("[ng-model='x']").prop("checked", isChecked);
                if (isChecked == true) {
                    choseArr = [];
                    angular.forEach($scope.ListPageData, function (obj) {
                        choseArr.push(obj.ID);//此处ID名称不同的页面名称不同，需要修改
                    });
                }
                else
                    choseArr = [];
            };
            $scope.chk = function ($event, z) {//单选或者多选
                var isChecked = $event.target.checked;
                if (isChecked == true) {//选中
                    if (choseArr.indexOf(z) < 0) {
                        choseArr.push(z);
                    }
                    if (choseArr.length == $scope.ListPageData.length) {
                        $scope.master = true;
                    }
                }
                else {//取消选中
                    var index = choseArr.indexOf(z);
                    if (index > -1) {
                        choseArr.splice(index, 1);
                        $scope.master = false;
                    }
                }
            };

            


            $scope.deleteOne = function (id) {
                box.popup('<div class="ui-input" style="margin-right:0px;">'
                        + '<input type="text" id="cancelReason" class="cell-input cell-input-data" style="width:350px;margin-left: 15px;margin-bottom: 0px;" />'
                        + '<div id="cancelReason_tip" style="margin-left: 15px; color:red; display:none;">*  取消原因不能为空！</div>'
                        + '</div>',
                     {
                         title: '请填写取消原因：',
                         width: 400,
                         height: 85,
                         hasOk: true,
                         hasCancel: true,
                         onBeforeClose: function (result) {
                             //var reason = $('#cancelReason').val();
                             var reason = box.getWindow()[0].document.getElementById("cancelReason").value;
                             if (result == true) {
                                 if (reason.length < 1) {
                                     $(box.getWindow()[0].document.getElementById("cancelReason_tip")).show();
                                     box.boxShake();
                                     return false;
                                 }

                                 //调用删除服务
                                 BusinessService.deleteData([id], reason).success(function (response) {
                                     if (response.isSuccess) {
                                         GetListData();
                                     }
                                     else {
                                         box.alert(response.messsage.length > 0 ? response.messsage : "操作失败", { icon: 'error' });
                                     }
                                 }).error(function (response) { box.alert("网络出错！", { icon: 'error' }); });
                             }
                         }
                     });
            };
            $scope.query = function () {
                GetListData();
            }

            $scope.LookData = function (id) {
                var url = "";
                if (id == "" || id == undefined) { //判断是列表点击确发，还是编辑按钮确发
                    if (choseArr[0] == "" || choseArr.length == 0) {//没有选择一个的时候提示
                        box.alert("请至少选中一条数据再操作！");
                        return;
                    };
                    url = CurPath + 'BoardroomManage/BoardroomApplyEdit?type=look&id=' + choseArr[0];
                }
                else {
                    url = CurPath + 'BoardroomManage/BoardroomApplyEdit?type=look&id=' + id;
                }
                //保存最近一次的查询条件
                if (parent.pageParamList != undefined) {
                    var pageParam = { pageUrl: '@Request.Path', postData: postData };
                    parent.pageParamList.push(pageParam);
                }
                window.location.href = url;
            };

            //显示title
            $scope.showTitle = function ($event, value) {
                ele = $event.target;
                if (!value) {
                    value = ele.innerHTML;
                }
                if (ele.offsetWidth < ele.scrollWidth) {
                    ele.title = ele.innerHTML;
                }
                else {
                    ele.title = '';
                }
            };
            $scope.dictCorpType = null;
            $scope.getCorpTextById = function (CorpID) {
                var result = "";
                if ($scope.dictCorpType != null) {
                    var temp = $filter('filter')($scope.dictCorpType, { 'value': CorpID });
                    if (temp.length > 0)
                        result = temp[0].text;
                    return result;
                }
                else {
                    //获取所属单位
                    BusinessService.getDictListByName('所属单位').success(function (response) {
                        $scope.dictCorpType = response.items;
                    }).error(function (err) {
                        box.alert("网络出错！", { icon: 'error' });
                    }).then(function () {
                        var temp = $filter('filter')($scope.dictCorpType, { 'value': CorpID });
                        if (temp.length > 0)
                            result = temp[0].text;
                        return result;
                    });
                }

            }

            //判断是否允许重置会议结束时间
            $scope.endTimeAble = function (obj) {
                return true;
                var time1 = obj.EndDate + ' ' + obj.EndTime;
                var time2 = $filter('date')(obj.EndDate_Real, 'yyyy-MM-dd HH:mm');
                if (time1 = time2)
                    return true;
                return false;
            }

            //更新会议结束时间
            $scope.updateEndTime = function (obj) {
                var time1 = obj.MeetingDate + ' ' + obj.StartTime;
                var time2 = obj.EndDate + ' ' + obj.EndTime;
                var time3 = $filter('date')(obj.EndDate_Real, 'yyyy-MM-dd HH:mm');
                box.popup('<div class="ui-input" style="margin-right:0px;">'
                        + '<table class="public-form" style="margin:20px 0px;">'
                        + '<tr><th>原会议开始时间：</th><td>' + time1 + '</td></tr>'
                        + '<tr><th>原会议结束时间：</th><td>' + time2 + '</td></tr>'
                        + '<tr><th>更新会议结束时间：</th><td>'
                        + '<div class="ui-input"><input type="text" id="newEndTime" value="' + time3 + '" onClick="WdatePicker({dateFmt:\'yyyy-MM-dd HH:mm\'})" class="cell-input" style="width:140px; outline:none;margin-bottom: 0px;"/><i class="icon-data" style="top:10px;"></i></div>'
                        + '<div id="cancelReason_tip" style="color:red; display:none; float:left;">*  请填写结束时间！</div>'
                        + '</td></tr>'
                        + '</table>'
                        + '</div>',
                     {
                         title: '更新会议结束时间：',
                         width: 400,
                         height: 180,
                         hasOk: true,
                         hasCancel: true,
                         onBeforeClose: function (result) {
                             var newtime = box.getWindow()[0].document.getElementById("newEndTime").value;
                             if (result == true) {
                                 if (newtime.length < 1) {
                                     $(box.getWindow()[0].document.getElementById("cancelReason_tip")).show();
                                     box.boxShake();
                                     return false;
                                 }

                                 //调用服务-更新会议结束时间
                                 BusinessService.updateEndTime(obj.ID, newtime).success(function (response) {
                                     if (response.isSuccess) {
                                         GetListData();
                                     }
                                     else {
                                         box.alert(response.messsage.length > 0 ? response.messsage : "操作失败", { icon: 'error' });
                                     }
                                 }).error(function (response) { box.alert("网络出错！", { icon: 'error' }); });
                             }
                         }
                     });
            }

        }]);
        //业务类
        app.factory('BusinessService', ['$http', function ($http) {
            var serive = {};
            //获取列表请求
            serive.list = function (postData) {
                return $http.post(CurPath + 'BoardroomManage/GetBoardroomApplyListData', postData);
            };

            serive.deleteData = function (ids, reason) {
                return $http({
                    method: 'POST',
                    url: CurPath + 'BoardroomManage/CancelBoardroomApply_manager',
                    data: { ids: ids, reason: reason }
                });
            };

            serive.updateEndTime = function (id, newtime) {//更新会议结束时间
                return $http({
                    method: 'POST',
                    url: CurPath + 'BoardroomManage/UpdateMeetingEndTime',
                    data: { id: id, newtime: newtime }
                });
            };

            serive.GetBoardroomInfoListData_short = function () {//获取会议室资料数据
                return $http({
                    method: 'POST',
                    url: CurPath + 'BoardroomManage/GetBoardroomInfoListData_short'
                });
            };

            //根据字典名称获取字典信息
            serive.getDictListByName = function (DDName) {
                return $http({
                    method: 'POST',
                    url: CurPath + 'DataDictionary/GetDictListByName',
                    data: { DDName: DDName }
                });
            };
            return serive;
        }]);

    </script>
}
<div id="ng-app" ng-app="ListPage" ng-controller="Controller">
    <!--content--->
    <div class="search-mod">
        <table>
            <tr>
                <td>会议室：</td>
                <td>
                    <div class="selectdrapdown">
                        @*<select class="cell-input" ng-model="queryBuilder.Room" style="width:135px;">
                                <option ng-repeat="x in BoardroomInfoList" value="{{x.BoardroomID}}">{{x.Name}}</option>
                            </select>*@
                        <div isteven-multi-select
                             input-model="BoardroomInfoList"
                             output-model="roomSelected"
                             button-label="Name"
                             item-label="Name"
                             tick-property="ticked"
                             helper-elements=""
                             style="width:160px;">
                        </div>
                    </div>
                </td>
                <td>
                    状态：
                </td>

                <td>
                    <div class="selectdrapdown">
                        @*<select class="cell-input" name="State" required ng-model="queryBuilder.State" style="width:100px;">
                                <option value="">全部</option>
                                <option value="1">待审核</option>
                                <option value="2">待评价</option>
                                <option value="3">完成</option>
                                <option value="-1">撤销</option>
                            </select>*@
                        <div isteven-multi-select
                             input-model="stateList"
                             output-model="stateSelected"
                             button-label="text"
                             item-label="text"
                             tick-property="ticked"
                             helper-elements=""
                             style="width:160px;">
                        </div>
                    </div>
                </td>
            </tr>
        </table>
        <table>
            <tr>

                <td>
                    申请时间：
                </td>
                <td>
                    <div class="ui-input" style="margin-right:0px;">
                        <input type="text" id="AppTime_start" date-Picker ng-model="queryBuilder.AppTime_start" class="cell-input cell-input-data" readonly>
                        <i class="icon-data"></i>
                    </div>
                </td>
                <td style="padding-left:5px;padding-right:5px;">至</td>
                <td>
                    <div class="ui-input">
                        <input type="text" id="AppTime_end" date-Picker ng-model="queryBuilder.AppTime_end" class="cell-input cell-input-data" readonly>
                        <i class="icon-data"></i>
                    </div>
                </td>
                <td>
                    <div class="ui-input">
                        <a ng-click="query()" class="cell-btn-blue" style="*margin-bottom:8px;">查询</a>
                    </div>
                </td>
            </tr>
        </table>
    </div>

    <div class="public-table-main">
        <table cellpadding="0" cellspacing="0">
            <tr>
                <th><input type="checkbox" ng-checked="ischecked" ng-model="master" ng-click="all($event)" /></th>
                <th>会议室</th>
                <th>地点</th>
                <th>申请人</th>
                <th width="110px;">申请时间</th>
                <th>工单号</th>
                <th width="110px;">开始时间</th>
                <th width="110px;">结束时间</th>
                <th>状态</th>
                <th>操作</th>
            </tr>
            <tr ng-repeat="emp in ListPageData">
                <td><input type="checkbox" id="{{emp.ID}}" ng-model="x" ng-checked="x" ng-click="chk($event,emp.ID)" /></td>
                <td ng-bind="emp.RoomInfo.Name"></td>
                <td ng-bind="emp.RoomInfo.Address"></td>
                <td ng-bind="emp.AppPerson_text"></td>
                <td ng-bind="emp.AppTime|date:'yyyy-MM-dd HH:mm'"></td>
                <td><div class="titleCol"ng-click="LookData(emp.ID)">{{emp.Code}}</div></td>
                <td ng-bind="emp.MeetingDate|date:'yyyy-MM-dd '+emp.StartTime"></td>
                <td ng-bind="emp.EndDate_Real|date:'yyyy-MM-dd HH:mm'"></td>
                <td ng-bind="emp.WF_StateText"></td>
                <td>
                    <div class="operation-btn">
                        @*<a ng-href="../BoardroomManage/BoardroomApplyEdit?type=look&id={{emp.ID}}">查看</a>*@
                        <a href="javascript:void(0);" ng-click="updateEndTime(emp)" ng-show="endTimeAble(emp)&&(emp.WF_StateText=='已提交'||emp.WF_StateText=='已完成')">结束时间</a>
                        <a href="javascript:void(0);" ng-click="deleteOne(emp.ID)" ng-hide="emp.WF_StateText=='已完成'||emp.WF_StateText=='已取消'">取消</a>
                    </div>
                </td>
            </tr>

        </table>
    </div>

    <div class="main-flip">
        <div class="the-operation1" style="float:left">
            <ul>
                <li><a href="javascript:void(0);" ng-click="LookData()" class="btn-find"><i></i>查看</a></li>
            </ul>

        </div>
        <tm-pagination conf="paginationConf"></tm-pagination>
    </div>
    <!--content--->
</div>
