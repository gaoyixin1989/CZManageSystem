
@{
    ViewBag.Title = "订餐明细统计";
    Layout = "~/Views/Shared/_Content.cshtml";
}

@section Scripts{
    <script src="~/Content/app/datePicker.js"></script>
    <!--[弹出层]-->
    <script src="~/Content/Javascript/ngDialog/ngDialog.js"></script>
    <!--[弹出层end]-->
    <script type="text/javascript">
        var app = angular.module('ListPage', ['tm.pagination', 'datePicker', 'ngDialog']);
        //控制器
        app.controller('OrderMealMenuController', ['$scope', '$timeout', "$filter", 'BusinessService', 'ngDialog', function ($scope,$timeout, $filter, BusinessService, ngDialog) {
            $scope.queryBuilder = {
                DinningRoomName: "",
                MealTimeType: "",
                MealPlaceName: "",
                OrderStateName: "",
                OrderTime_Start: "",
                OrderTime_End: "",
                //DpId: [],
                DinningRoomID: "00000000-0000-0000-0000-000000000000"
            };
            $scope.DpBuilder = {
                DpName: "",
                DpId: ""
            };
            var getComData = false;

            //获取周期类型
            BusinessService.getDinningRoomAsDict().success(function (response) {
                $scope.dictDinningRoom = response;
            }).error(function (err) {
                box.alert("网络出错！", { icon: 'error' });
            }).then(function () { });
            //获取周期类型
            BusinessService.getOrderStateAsDict().success(function (response) {
                $scope.dictOrderState = response;
            }).error(function (err) {
                box.alert("网络出错！", { icon: 'error' });
            }).then(function () { });
            //获取户号作为下拉框字典
            BusinessService.getDictListByName("餐次").success(function (response) {
                $scope.dictMealTimeType = response.items;
            }).error(function (err) {
                box.alert("网络出错！", { icon: 'error' });
            }).then(function () { });
            //获取列表
            var GetListData = function () {
                box.load("GetListData");
                queryBuilder: $scope.queryBuilder
                var postData = {
                    pageIndex: $scope.paginationConf.currentPage,
                    pageSize: $scope.paginationConf.itemsPerPage,
                    queryBuilder: $scope.queryBuilder,
                    DpId: $scope.DpBuilder.DpId
                }
                BusinessService.list(postData).success(function (response) {
                    box.ready("GetListData");
                    $scope.paginationConf.totalItems = response.count;
                    $scope.ListPageData = response.items;
                }).error(function (err) {
                    box.ready("GetListData");
                    box.alert("网络出错！", { icon: 'error' });
                });
            }
            //配置分页基本参数
            $scope.paginationConf = {
                currentPage: 1,
                itemsPerPage: 10
            };
            /***************************************************************
            当页码和页面记录数发生变化时监控后台查询
            如果把currentPage和itemsPerPage分开监控的话则会触发两次后台事件。
            ***************************************************************/
            $scope.$watch('paginationConf.currentPage + paginationConf.itemsPerPage', GetListData);
            $scope.editMember = function (type) {//dept、role、user
                var iframeId = type + '_edit';
                var title = "";
                var iframeSrc = "";
                var wWidth = 530;
                switch (type) {
                    case 'dept': {
                        title = '部门';
                        iframeSrc = '../UsersGrounp/SelectDepts?selectedId=' + $scope.queryBuilder.DeptId;
                    } break;
                    default: title = type;
                }
                title += "选择";
                var iframeStr = "<iframe id='" + iframeId + "' name='" + iframeId + "' frameborder='0' marginwidth='0' style='width:100%;height:100%;overflow:hidden;' src='" + iframeSrc + "'></iframe>";
                box.popup(iframeStr,
                    {
                        title: title,
                        width: wWidth,//窗口宽度，默认400
                        height: 380,//窗口高度，默认400
                        hasOk: true,
                        hasCancel: true,
                        onBeforeClose: function (data) {
                            if (data == true) {
                                var theWindow = window;
                                while ((!theWindow.frames[iframeId]) && (!!theWindow.parent)) {
                                    theWindow = theWindow.parent;
                                }
                                if (!theWindow.frames[iframeId]) {
                                    box.alert('出错！', { icon: 'error' });
                                }
                                else {
                                    var result = theWindow.frames[iframeId].getResult();
                                    switch (type) {
                                        case 'dept': {
                                            //$scope.queryBuilder.DpId = getAttrByArr(result, 'id').join(',');
                                            //$scope.queryBuilder.DpName = getAttrByArr(result, 'text').join(',');
                                            $scope.DpBuilder.DpId = getAttrByArr(result, 'id').join(',');
                                            $scope.DpBuilder.DpName = getAttrByArr(result, 'text').join(',');
                                        } break;
                                        default: break;
                                    }
                                    $scope.$apply();
                                }
                            }
                        }
                    });
            }
            /*实现全选，多选操作*/
            var choseArr = new Array();
            $scope.x = false;//默认未选中
            $scope.all = function ($event) {//全选
                var isChecked = $event.target.checked;
                angular.element("[ng-model='x']").prop("checked", isChecked);
                if (isChecked == true) {
                    choseArr = [];
                    angular.forEach($scope.ListPageData, function (obj) {
                        choseArr.push(obj.Id);//此处ID名称不同的页面名称不同，需要修改
                    });
                }
                else
                    choseArr = [];
            };
            $scope.chk = function ($event, z) {//单选或者多选
                var isChecked = $event.target.checked;
                if (isChecked == true) {//选中
                    if (choseArr.indexOf(z) < 0) {
                        choseArr.push(z);
                    }
                    if (choseArr.length == $scope.ListPageData.length) {
                        $scope.master = true;
                    }
                }
                else {//取消选中
                    var index = choseArr.indexOf(z);
                    if (index > -1) {
                        choseArr.splice(index, 1);
                        $scope.master = false;
                    }
                }
            };
            $scope.deleteData = function () {//
                if (choseArr[0] == "" || choseArr.length == 0) {//没有选择一个的时候提示
                    box.alert("请至少选中一条数据再操作！");
                    return;
                };
                if (choseArr[0] == "" || choseArr.length != 1) {//没有选择一个的时候提示
                    box.alert("请选中一条您要退订的数据再操作（请不要多选）！");
                    return;
                };
                box.confirm("确定要退订选中的" + choseArr.length + "条数据吗？", { icon: 'question' }, function (result) {
                    if (result) {
                        BusinessService.deleteData(choseArr).success(function (response) {
                            if (response.IsSuccess) {
                                box.alert(response.Message, { icon: 'success' });
                                GetListData();
                                choseArr = [];
                            }
                            else {
                                box.alert(response.Message, { icon: 'error' });
                            }
                        }).error(function (response) { box.alert("网络出错！", { icon: 'error' }); });
                    }
                });
            };

            $scope.Edit = function () {
                if (choseArr[0] == "" || choseArr.length != 1) {//没有选择一个的时候提示
                    box.alert("请选中一条您要修改的数据再操作（请不要多选）！");
                    return;
                };
                window.location.href = CurPath + 'OrderMealMenu/Edit?id=' + choseArr[0];

            }

            $scope.query = function () {
                GetListData();
            }

        }]);
        //业务类
        app.factory('BusinessService', ['$http', function ($http) {
            var serive = {};
            //获取列表请求
            serive.list = function (postData) {
                return $http.post(CurPath + 'OrderMeal/GetListData', postData);
            };

            //获取服务信息作为字典
            serive.getOrderStateAsDict = function () {
                return $http({
                    method: 'POST',
                    url: CurPath + 'OrderMeal/getOrderStateAsDict'
                });
            };
            serive.getDinningRoomAsDict = function () {
                return $http({
                    method: 'POST',
                    url: CurPath + 'OrderMealDinningRoom/getDinningRoomAsDict'
                });
            };
            //根据字典名称获取字典信息
            serive.getDictListByName = function (DDName) {//获取字典
                return $http({
                    method: 'POST',
                    url: CurPath + 'DataDictionary/GetDictListByName',
                    data: { DDName: DDName }
                });
            };
            serive.deleteData = function (ids) {
                return $http({
                    method: 'POST',
                    url: CurPath + 'OrderMeal/BackOrder',
                    data: ids
                });
            };
            return serive;
        }]);
        app.filter("jsonDate", function ($filter) {
            return function (input, format) {
                //从字符串 /Date(1448864369815)/ 得到时间戳 1448864369815
                var timestamp = Number(input.replace(/\/Date\((\d+)\)\//, "$1"));
                //转成指定格式
                return $filter("date")(timestamp, format);
            };
        });


    </script>
    <style>
        .cell-input {
            width: 80px;
        }
    </style>
}


<div id="ng-app" ng-app="ListPage" ng-controller="OrderMealMenuController">
    <!--content--->
    <div class="search-mod" style="height:90px;">
        <table>
            <tr>
                <td>
                    食堂名称：
                </td>
                <td>
                    <div class="ui-input">
                        <div class="selectdrapdown">
                            <select class="cell-input" ng-model="queryBuilder.DinningRoomName" style="width:70px;" ng-options="x.DinningRoomName as x.DinningRoomName for x in dictDinningRoom">
                                <option value="">全部</option>
                            </select>
                        </div>
                    </div>
                </td>
                <td>
                    用餐时段：
                </td>
                <td>
                    <div class="ui-input">
                        <div class="selectdrapdown">
                            <select class="cell-input" ng-model="queryBuilder.MealTimeType" style="width:70px;" ng-options="x.text as x.text for x in dictMealTimeType">
                                <option value="">全部</option>
                            </select>
                        </div>
                    </div>
                </td>
                <td>
                    订单类型：
                </td>
                <td>
                    <div class="ui-input">
                        <div class="selectdrapdown">
                            <select class="cell-input" ng-model="queryBuilder.OrderStateName" style="width:70px;" ng-options="x.OrderStateName as x.OrderStateName for x in dictOrderState">
                                <option value="">全部</option>
                            </select>
                        </div>
                    </div>
                </td>


            </tr>
            <tr>
                <td>
                    订餐日期：
                </td>
                <td colspan="3">
                    <div class="ui-input">
                        <input type="text" ng-model="queryBuilder.OrderTime_Start" date-Picker datefmt="yyyy-MM-dd" class="cell-input cell-input-data" readonly style="width:70px;" /><i class="icon-data"></i>
                        <span style="float:left;margin:0px 5px;">至</span>
                        <input type="text" ng-model="queryBuilder.OrderTime_End" date-Picker datefmt="yyyy-MM-dd" class="cell-input cell-input-data" readonly style="width:70px;" /><i class="icon-data"></i>
                    </div>
                </td>
                <td>
                    用餐地点：
                </td>
                <td>
                    <div class="ui-input">
                        <input type="text" ng-model="queryBuilder.MealPlaceName" class="cell-input" style="width:70px;" />
                    </div>
                </td>

            </tr>
            <tr>
                <td>姓名：</td>
                <td>
                    <div class="ui-input">
                        <input type="text" ng-model="queryBuilder.RealName" class="cell-input" style="width:70px;" />
                    </div>
                </td>
                <td>
                    部门：
                </td>
                <td>
                    <div class="ui-input">
                        <input type="text" style="display:none;" name="DeptId" ng-model="DpBuilder.DpId" ng- class="cell-input" />
                        @*<input type="text" style="display:none;" name="DeptId" ng-model="queryBuilder.DpId" ng- class="cell-input" />*@
                        <input type="text" name="DeptName" ng-model="DpBuilder.DpName" required class="cell-input" ng-click="editMember('dept')" />
                    </div>
                </td>
                <td>
                    <div class="ui-input">
                        <a ng-click="query()" class="cell-btn-blue" style="*margin-bottom:8px;">查询</a>
                    </div>
                </td>
            </tr>
        </table>
    </div>

    <div class="public-table-main">
        <table cellpadding="0" cellspacing="0">
            <tr>
                <th><input type="checkbox" ng-checked="ischecked" ng-model="master" ng-click="all($event)" /> </th>
                <th>食堂名称</th>
                <th>餐时类型</th>
                <th>套餐名称</th>
                <th>套餐价格</th>
                <th>用餐地点</th>
                <th>用餐时间</th>
                <th>姓名</th>
                <th>部门</th>
                <th>订/退餐后余额</th>
                <th>订餐时间</th>
                <th>最晚退餐时间</th>
                <th>状态</th>
            </tr>
            <tr ng-repeat="emp in ListPageData">
                <td><input type="checkbox" id="{{emp.Id}}" ng-model="x" ng-checked="x" ng-click="chk($event,emp.Id)" /></td>
                <td ng-bind="emp.DinningRoomName"></td>
                <td ng-bind="emp.MealTimeType"></td>
                <td ng-bind="emp.PackageName"></td>
                <td ng-bind="emp.PackagePrice.toFixed(2)"></td>
                <td ng-bind="emp.MealPlaceName"></td>
                <td ng-bind="emp.DinningDate"></td>
                <td ng-bind="emp.UserName"></td>
                <td ng-bind="emp.DpName"></td>
                <td ng-bind="emp.AfterOrderBalance.toFixed(2)"></td>
                <td ng-bind="emp.OrderTime"></td>
                <td ng-bind="emp.ClosePayBackTime"></td>
                <td ng-bind="emp.OrderStateName"></td>
            </tr>

        </table>
    </div>

    <div class="main-flip">

        <div class="the-operation1" style="float:left">
            <ul>
                <li><a href="javascript:void(0);" ng-click="deleteData()" class="btn-del"><i></i>退订</a></li>
                <li><a href="../OrderMeal/Export?queryBuilder={{queryBuilder}}&DpId={{DpBuilder.DpId}}" class="btn-export"><i></i>导出</a></li>
            </ul>

        </div>
        <tm-pagination conf="paginationConf"></tm-pagination>
    </div>
    <!--content--->
</div>

