<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="ActivityDefinitionSpace" xmlns="http://ibatis.apache.org/mapping"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <alias>
    <typeAlias alias="ActivityDefinition" type="Botwave.Workflow.Domain.ActivityDefinition, Botwave.Workflow.Core" />
  </alias>

  <!--<cacheModels>
        <cacheModel id="ad-cache" implementation="LRU" readOnly="true" serialize="false">
            <flushInterval hours="24"/>
            <property name="CacheSize" value="200"/>
        </cacheModel>
    </cacheModels>-->

  <resultMaps>
    <resultMap id="ActivityDefinitionResult" class="ActivityDefinition">
      <result property="WorkflowId" column="WorkflowId"/>
      <result property="ActivityId" column="ActivityId"/>
      <result property="ActivityName" column="ActivityName"/>
      <result property="State" column="State"/>
      <result property="SortOrder" column="SortOrder"/>
      <result property="PrevActivitySetId" column="PrevActivitySetId" />
      <result property="NextActivitySetId" column="NextActivitySetId"/>
      <result property="ParallelActivitySetId" column="ParallelActivitySetId"/>
      <result property="JoinCondition" column="JoinCondition"/>
      <result property="SplitCondition" column="SplitCondition"/>
      <result property="CountersignedCondition" column="CountersignedCondition"/>
      <result property="CommandRules" column="CommandRules"/>
      <result property="ExecutionHandler" column="ExecutionHandler"/>
      <result property="PostHandler" column="PostHandler"/>
      <result property="AllocatorResource" column="AllocatorResource" />
      <result property="AllocatorUsers" column="AllocatorUsers" />
      <result property="ExtendAllocators" column="ExtendAllocators" />
      <result property="ExtendAllocatorArgs" column="ExtendAllocatorArgs" />
      <result property="DefaultAllocator" column="DefaultAllocator" />
      <result property="DecisionType" column="DecisionType" />
      <result property="DecisionParser" column="DecisionParser" />
      <result property="RejectOption" column="RejectOption" />
    </resultMap>
  </resultMaps>

  <statements>

    <select id="bwwf_Activity_Select" resultMap="ActivityDefinitionResult" parameterClass="guid">
      SELECT WorkflowId,ActivityId,ActivityName,State,SortOrder,PrevActivitySetId,NextActivitySetId,JoinCondition,SplitCondition,CommandRules,ExecutionHandler,PostHandler,AllocatorResource,AllocatorUsers,ExtendAllocators,ExtendAllocatorArgs,DefaultAllocator,DecisionType,DecisionParser,CountersignedCondition,ParallelActivitySetId,RejectOption
      FROM bwwf_Activities
      <dynamic prepend="where">
        <isParameterPresent>
          ActivityId = #value#
        </isParameterPresent>
      </dynamic>
    </select>

    <select id="bwwf_Activity_Select_Count_By_WorkflowId" resultClass="int" parameterClass="guid">
      SELECT COUNT(*) FROM bwwf_Activities
      WHERE WorkflowId = #value#
    </select>

    <select id="bwwf_Activity_Select_By_ActivityInstanceId" resultMap="ActivityDefinitionResult" parameterClass="guid">
      SELECT WorkflowId,ActivityId,ActivityName,State,SortOrder,PrevActivitySetId,NextActivitySetId,JoinCondition,SplitCondition,
      CommandRules,ExecutionHandler,PostHandler,AllocatorResource,AllocatorUsers,ExtendAllocators,ExtendAllocatorArgs,DefaultAllocator,DecisionType,DecisionParser,CountersignedCondition,ParallelActivitySetId,RejectOption
      FROM bwwf_Activities
      WHERE ActivityId=(
      SELECT ActivityId FROM vw_bwwf_Tracking_Activities_All WHERE ActivityInstanceId = #value#)
    </select>

    <select id="bwwf_Activity_Select_Initial_By_WorkflowList" resultMap="ActivityDefinitionResult" parameterClass="Hashtable">
      <![CDATA[ 
      select * from dbo.bwwf_Activities where WorkflowId=#workflowId# and sortorder < 
      (
        select sortorder from dbo.bwwf_Activities where WorkflowId=#workflowId# and activityname=#activityName#
      )  order by sortorder
       ]]>
    </select>

    <select id="bwwf_Activity_Select_Initial_By_WorkflowId" resultMap="ActivityDefinitionResult" parameterClass="guid">
      SELECT WorkflowId,ActivityId,ActivityName,State,SortOrder,PrevActivitySetId,NextActivitySetId,JoinCondition,SplitCondition,
      CommandRules,ExecutionHandler,PostHandler,AllocatorResource,AllocatorUsers,ExtendAllocators,ExtendAllocatorArgs,DefaultAllocator,DecisionType,DecisionParser,CountersignedCondition,ParallelActivitySetId,RejectOption
      FROM bwwf_Activities
      WHERE State = 0 and WorkflowId = #value#
    </select>

    <select id="bwwf_Activity_Select_Start_By_WorkflowId" resultMap="ActivityDefinitionResult" parameterClass="guid">
      SELECT WorkflowId,ActivityId,ActivityName,State,SortOrder,PrevActivitySetId,NextActivitySetId,JoinCondition,SplitCondition,
      CommandRules,ExecutionHandler,PostHandler,AllocatorResource,AllocatorUsers,ExtendAllocators,ExtendAllocatorArgs,DefaultAllocator,DecisionType,DecisionParser,CountersignedCondition,ParallelActivitySetId,RejectOption
      FROM bwwf_Activities
      WHERE WorkflowId = #value# AND ActivityId IN(
      SELECT ActivityId FROM bwwf_ActivitySet WHERE SetId = (
      SELECT a1.NextActivitySetId FROM bwwf_Activities a1
      WHERE a1.State = 0 AND WorkflowId = #value#
      )
      )
      ORDER BY SortOrder
    </select>

    <select id="bwwf_Activity_Select_Start_By_WorkflowInstanceId" resultMap="ActivityDefinitionResult" parameterClass="guid">
      SELECT WorkflowId,ActivityId,ActivityName,State,SortOrder,PrevActivitySetId,NextActivitySetId,JoinCondition,SplitCondition,
      CommandRules,ExecutionHandler,PostHandler,AllocatorResource,AllocatorUsers,ExtendAllocators,ExtendAllocatorArgs,DefaultAllocator,DecisionType,DecisionParser,CountersignedCondition,ParallelActivitySetId,RejectOption
      FROM bwwf_Activities
      WHERE (WorkflowId = (SELECT WorkflowId FROM bwwf_Tracking_Workflows WHERE WorkflowInstanceId = #value#))
      AND (ActivityId IN(
      SELECT ActivityId FROM bwwf_ActivitySet WHERE SetId = (
      SELECT a1.NextActivitySetId FROM bwwf_Activities a1
      WHERE a1.State = 0 AND WorkflowId = (SELECT WorkflowId FROM bwwf_Tracking_Workflows WHERE WorkflowInstanceId = #value#)
      )
      ))
      ORDER BY SortOrder
    </select>

    <select id="bwwf_Activity_Select_PrevDefinitions" resultMap="ActivityDefinitionResult" parameterClass="guid">
      SELECT WorkflowId,ActivityId,ActivityName,State,SortOrder,PrevActivitySetId,NextActivitySetId,JoinCondition,SplitCondition,
      CommandRules,ExecutionHandler,PostHandler,AllocatorResource,AllocatorUsers,ExtendAllocators,ExtendAllocatorArgs,DefaultAllocator,DecisionType,DecisionParser,CountersignedCondition,ParallelActivitySetId,RejectOption
      FROM bwwf_Activities
      WHERE ActivityId IN(
      SELECT BAS1.ActivityId FROM bwwf_ActivitySet BAS1
      WHERE BAS1.SetId = (
      SELECT BA1.PrevActivitySetId FROM bwwf_Activities BA1
      WHERE BA1.ActivityId = #value#
      )
      )
      ORDER BY SortOrder
    </select>

    <select id="bwwf_Activity_Select_Prev_By_ActivityInstanceId" resultMap="ActivityDefinitionResult" parameterClass="guid">
      <![CDATA[
      SELECT WorkflowId,ActivityId,ActivityName,State,SortOrder,PrevActivitySetId,NextActivitySetId,JoinCondition,SplitCondition,
        CommandRules,ExecutionHandler,PostHandler,AllocatorResource,AllocatorUsers,ExtendAllocators,ExtendAllocatorArgs,DefaultAllocator,DecisionType,DecisionParser,CountersignedCondition,ParallelActivitySetId,RejectOption
      FROM bwwf_Activities
      WHERE ActivityId IN(
        SELECT BAS1.ActivityId FROM bwwf_ActivitySet AS BAS1
        WHERE BAS1.SetId = (
          SELECT BA2.PrevActivitySetId FROM bwwf_Activities BA2
          WHERE BA2.ActivityId = (
            SELECT BTA1.ActivityId FROM vw_bwwf_Tracking_Activities_All AS BTA1
            WHERE BTA1.ActivityInstanceId = #value#
          )
        )
      )
      ]]>
    </select>

    <select id="bwwf_Activity_Select_Next_By_ActivityInstanceId" resultMap="ActivityDefinitionResult" parameterClass="guid">
      <![CDATA[
      SELECT WorkflowId,ActivityId,ActivityName,State,SortOrder,PrevActivitySetId,NextActivitySetId,JoinCondition,SplitCondition,
        CommandRules,ExecutionHandler,PostHandler,AllocatorResource,AllocatorUsers,ExtendAllocators,ExtendAllocatorArgs,DefaultAllocator,DecisionType,DecisionParser,CountersignedCondition,ParallelActivitySetId,RejectOption
      FROM bwwf_Activities
      WHERE ActivityId IN(
        SELECT BAS1.ActivityId FROM bwwf_ActivitySet AS BAS1
        WHERE BAS1.SetId = (
          SELECT BA2.NextActivitySetId FROM bwwf_Activities BA2
          WHERE BA2.ActivityId = (
            SELECT BTA1.ActivityId FROM vw_bwwf_Tracking_Activities_All AS BTA1
            WHERE BTA1.ActivityInstanceId = #value#
          )
        )
      )
      ORDER BY SortOrder
      ]]>
    </select>

    <!--colion修改-->
    <select id="bwwf_Activity_Select_By_ActivityInstanceId_To" resultMap="ActivityDefinitionResult" parameterClass="Hashtable">
      <![CDATA[
     SELECT WorkflowId,ActivityId,ActivityName,State,SortOrder,PrevActivitySetId,NextActivitySetId,JoinCondition,SplitCondition,
        CommandRules,ExecutionHandler,PostHandler,AllocatorResource,AllocatorUsers,ExtendAllocators,ExtendAllocatorArgs,DefaultAllocator,DecisionType,DecisionParser,CountersignedCondition,ParallelActivitySetId,RejectOption,AssistUsers
      FROM bwwf_Activities 
      where workflowid=(select workflowid from dbo.bwwf_Workflows where workflowname=#Workflowname# and iscurrent=1) and activityname=#Activityname#
      
      ]]>
    </select>
    
    <select id="bwwf_Activity_Select_By_WorkflowId" resultMap="ActivityDefinitionResult" parameterClass="guid">
      SELECT WorkflowId,ActivityId,ActivityName,State,SortOrder,PrevActivitySetId,NextActivitySetId,JoinCondition,SplitCondition,
      CommandRules,ExecutionHandler,PostHandler,AllocatorResource,AllocatorUsers,ExtendAllocators,ExtendAllocatorArgs,DefaultAllocator,DecisionType,DecisionParser,CountersignedCondition,ParallelActivitySetId,RejectOption
      FROM bwwf_Activities
      WHERE WorkflowId =#WorkflowId# ORDER BY State, SortOrder, AllocatorResource
    </select>

    <select id="bwwf_Activity_Select_All_By_ActivityInstanceId" resultMap="ActivityDefinitionResult" parameterClass="guid">
      SELECT WorkflowId,ActivityId,ActivityName,State,SortOrder,PrevActivitySetId,NextActivitySetId,JoinCondition,SplitCondition,
      CommandRules,ExecutionHandler,PostHandler,AllocatorResource,AllocatorUsers,ExtendAllocators,ExtendAllocatorArgs,DefaultAllocator,DecisionType,DecisionParser,CountersignedCondition,ParallelActivitySetId,RejectOption
      FROM bwwf_Activities
      WHERE WorkflowId = (
      SELECT TW.WorkflowId FROM bwwf_Tracking_Workflows TW
      WHERE TW.WorkflowInstanceId =(
      SELECT TA.WorkflowInstanceId FROM vw_bwwf_Tracking_Activities_All TA WHERE TA.ActivityInstanceId = #value#
      )
      )
      ORDER BY State, SortOrder,AllocatorResource
    </select>

    <insert id="bwwf_Activities_Insert" parameterClass="ActivityDefinition">
      INSERT INTO bwwf_Activities(
      [WorkflowId],[ActivityId],[ActivityName],[State],SortOrder,[PrevActivitySetId],[NextActivitySetId],[JoinCondition],[SplitCondition],[CommandRules],[ExecutionHandler],[PostHandler],[AllocatorResource],AllocatorUsers,ExtendAllocators,ExtendAllocatorArgs,DefaultAllocator,DecisionType,DecisionParser,CountersignedCondition,ParallelActivitySetId,RejectOption
      )VALUES(
      #WorkflowId#,#ActivityId#,#ActivityName#,#State#,#SortOrder#,#PrevActivitySetId#,#NextActivitySetId#,#JoinCondition#,#SplitCondition#,#CommandRules#,#ExecutionHandler#,#PostHandler#,#AllocatorResource#,#AllocatorUsers#,#ExtendAllocators#,#ExtendAllocatorArgs#,#DefaultAllocator#,#DecisionType#,#DecisionParser#,#CountersignedCondition#,#ParallelActivitySetId#,#RejectOption#
      )
    </insert>

    <update id="bwwf_Activities_Update_Allocators" parameterClass="ActivityDefinition">
      <![CDATA[
        UPDATE bwwf_Activities 
          SET CommandRules = #CommandRules#, AllocatorResource = #AllocatorResource#, AllocatorUsers=#AllocatorUsers#,
          ExtendAllocators = #ExtendAllocators#, ExtendAllocatorArgs = #ExtendAllocatorArgs#, DefaultAllocator=#DefaultAllocator#
        WHERE ActivityId = #ActivityId#
      ]]>
    </update>

    <!--根据流程ID,步骤名称,获取ActivityID-->
    <select id="bwwf_Activity_Select_ActivityID_By_WorkflowIdAndName" resultClass="guid" parameterClass="Hashtable">
      select ActivityId from bwwf_Activities where WorkFlowID=#WorkFlowID# and ActivityName=#ActivityName#
    </select>
    <!--更新下一步活动ID-->
    <update id="bwwf_Activity_Update_NextActivitySetId" parameterClass="hashtable">
      <![CDATA[
      update bwwf_Activities set NextActivitySetId=#ActivityID# where ActivityID=#PrevActivitySetId#
      ]]>
    </update>
    <!--根据活动id获取name-->
    <select id="bwwf_Activity_Select_ActivityName_By_ActivityId" parameterClass="guid" resultClass="string">
      select ActivityName from bwwf_Activities where ActivityId = #value#
    </select>
  </statements>
</sqlMap>