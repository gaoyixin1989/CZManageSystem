<?xml version="1.0" encoding="utf-8" ?>

<sqlMap namespace="WorkflowDefinitionSpace" xmlns="http://ibatis.apache.org/mapping"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <alias>
    <typeAlias alias="WorkflowSetting" type="Botwave.Workflow.Domain.WorkflowSetting, Botwave.Workflow.Core" />
  </alias>

  <cacheModels>
    <cacheModel id="wf-setting-cache" implementation="LRU" readOnly="true" serialize="false">
      <flushInterval hours="24"/>
      <property name="CacheSize" value="100"/>
    </cacheModel>
  </cacheModels>

  <resultMaps>
    <resultMap id="WorkflowSettingResult" class="WorkflowSetting">
      <result property="WorkflowName" column="WorkflowName"/>
      <result property="WorkflowAlias" column="WorkflowAlias"/>
      <result property="AliasImage" column="AliasImage"/>
      <result property="BasicFields" column="BasicFields"/>
      <result property="TaskNotifyMinCount" column="TaskNotifyMinCount"/>
      <result property="UndoneMaxCount" column="UndoneMaxCount"/>
    </resultMap>
  </resultMaps>

  <statements>
    <insert id="bwwf_WorkflowSettings_Insert" parameterClass="WorkflowSetting">
      INSERT INTO bwwf_WorkflowSettings
      (WorkflowName,WorkflowAlias,AliasImage,BasicFields,TaskNotifyMinCount,UndoneMaxCount)
      VALUES
      (#WorkflowName#,#WorkflowAlias#,#AliasImage#,#BasicFields#, #TaskNotifyMinCount#,#UndoneMaxCount#)
    </insert>

    <update id="bwwf_WorkflowSettings_Update" parameterClass="WorkflowSetting">
      UPDATE bwwf_WorkflowSettings SET
      WorkflowAlias = #WorkflowAlias#, AliasImage = #AliasImage#, BasicFields = #BasicFields#,
      TaskNotifyMinCount=#TaskNotifyMinCount#, UndoneMaxCount = #UndoneMaxCount#
      WHERE WorkflowName=#WorkflowName#
    </update>

    <select id="bwwf_WorkflowSettings_Select_IsExists" resultClass="int" parameterClass="string">
      <![CDATA[
      SELECT COUNT(0) FROM bwwf_WorkflowSettings
      WHERE WorkflowName = #value#
      ]]>
    </select>

    <select id="bwwf_WorkflowSettings_Select" resultMap="WorkflowSettingResult" parameterClass="string">
      SELECT WorkflowName, BasicFields, WorkflowAlias, AliasImage, TaskNotifyMinCount,UndoneMaxCount
      FROM bwwf_WorkflowSettings
      <dynamic prepend="and">
        <isParameterPresent>
          WorkflowName = #value#
        </isParameterPresent>
      </dynamic>
      ORDER BY WorkflowAlias asc
    </select>

    <select id="bwwf_Workflows_Select_CurrentVersion_ByWorkflowAlias" resultClass="WorkflowDefinition" parameterClass="string">
      <![CDATA[
      SELECT WorkflowId, WorkflowName, Owner, Enabled, IsCurrent, Version, Creator, Remark,
          LastModifier, CreatedTime, LastModTime, IsDeleted, WorkflowAlias
      FROM vw_bwwf_Workflows_Detail
      WHERE (IsCurrent = 1 and WorkflowName IN (
          SELECT WorkflowName FROM bwwf_WorkflowSettings WHERE (WorkflowAlias = #value#)
        ))
      ORDER BY LastModTime DESC
      ]]>
    </select>

    <select id="bwwf_WorkflowSettings_Select_ByWorkflowId" resultMap="WorkflowSettingResult" parameterClass="guid">
      <![CDATA[
      SELECT WorkflowName, BasicFields, WorkflowAlias, AliasImage, TaskNotifyMinCount,UndoneMaxCount
      FROM bwwf_WorkflowSettings
      WHERE WorkflowName = (
        SELECT WorkflowName FROM bwwf_Workflows WHERE WorkflowId = #value#
      )
      ]]>
    </select>

    <select id="bwwf_WorkflowSettings_Select_ByWorkflowName" resultMap="WorkflowSettingResult" parameterClass="string">
      <![CDATA[
      SELECT WorkflowName, BasicFields, WorkflowAlias, AliasImage, TaskNotifyMinCount,UndoneMaxCount
      FROM bwwf_WorkflowSettings
      WHERE WorkflowName =  #value#
      ]]>
    </select>

  </statements>
</sqlMap>